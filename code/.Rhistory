legend.position = "bottom",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
ggarrange(p_top, p_bottom,
ncol = 1, nrow = 2,
align = "hv",
common.legend = T,
legend = "bottom") +
plot_annotation(title = "Absolute error in savings estimation of randomized M&V after satisfying all stopping criteria")
ggsave(filename = "abs_interval_sprt.png", path = fig_path, units = "in", height = 9, width = 12, dpi = 300)
#### MEAN ####
# plot for the stable subset
rand_eob_S <- df_seq_fs_stable %>%
filter(seq == "eob") %>%
left_join(df_fs_stable %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(diff = savings - fs,
method = "rand_eob") %>%
select(name, method, diff)
conv_S <- df_fs_stable %>%
filter(method != "rand") %>%
pivot_wider(names_from = method, values_from = savings) %>%
mutate(diff = true - conv,
method = "conv") %>%
select(name, method, diff)
rand_final_S <- df_fs_stable %>%
filter(method != "conv") %>%
pivot_wider(names_from = method, values_from = savings) %>%
mutate(diff = true - rand,
method = "rand_final") %>%
select(name, method, diff)
df_MW_S <- rbind(rand_eob_S, conv_S, rand_final_S)
# plot for the variable subset
rand_eob_V <- df_seq_fs_variable %>%
filter(seq == "eob") %>%
left_join(df_fs_variable %>% filter(scenario == "ref" & method == "true"), by = c("name", "site"))%>%
mutate(diff = savings - fs,
method = "rand_eob") %>%
select(name, method, diff)
conv_V <- df_fs_variable %>%
filter(method != "rand") %>%
pivot_wider(names_from = method, values_from = savings) %>%
mutate(diff = true - conv,
method = "conv") %>%
select(name, method, diff)
rand_final_V <- df_fs_variable %>%
filter(method != "conv") %>%
pivot_wider(names_from = method, values_from = savings) %>%
mutate(diff = true - rand,
method = "rand_final") %>%
select(name, method, diff)
df_MW_V <- rbind(rand_eob_V, conv_V, rand_final_V)
# plot for combined dataset
rand_eob_A <- bind_rows(rand_eob_V, rand_eob_S) %>%
select(name, rand_eob_diff = diff)
conv_A <- bind_rows(conv_V, conv_S) %>%
select(name, conv_diff = diff)
rand_final_A <- bind_rows(rand_final_V, rand_final_S) %>%
select(name, rand_final_diff = diff)
df_MW_A <- rand_eob_A %>%
left_join(conv_A, by = "name") %>%
left_join(rand_final_A, by = "name") %>%
pivot_longer(c(rand_eob_diff, conv_diff, rand_final_diff), names_to = "method", values_to = "diff")
p_top <- df_MW_A %>%
mutate(method = as.factor(method),
method = recode_factor(method, "conv_diff" = "Conventional", "rand_eob_diff" = "Randomized", "rand_final_diff" = "Randomized\n(24 months)")) %>%
ggplot(aes(x = method, y = diff, fill = method)) +
geom_jitter(width = 0.2, alpha = 0.8, size = 0.5) +
geom_lv(k = 4, outlier.shape = NA) +
geom_boxplot(outlier.alpha = 0, coef = 0, fill = "#00000000", aes(color = method)) +
geom_hline(yintercept = 0, color = "#fb8072", linewidth = 1.5, lty = "dashed") +
geom_text(data = . %>% group_by(method) %>% summarise(mean = mean(diff)) %>% ungroup(),
aes(x = method, y = mean, label = paste0(round(mean, digits = 1), " %"))) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 4),
labels = number_format(suffix = " %")) +
scale_fill_manual(values = ls_colors) +
scale_color_manual(values = c("grey80", "grey80", "grey80")) +
labs(fill = NULL,
color = NULL,
x = NULL,
y = "Mean error in fractional savings",
subtitle = str_glue("All {A_building} buildings with measured weather")) +
coord_cartesian(ylim = c(-20, 20)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.position = "none",
axis.text.x = element_blank(),
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
# TMY
# plot for the stable subset
rand_eob_S <- df_sprt_all_stable %>%
filter(seq == "eob") %>%
select(-c(seq, n_weeks)) %>%
left_join(df_fs_stable %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(diff = savings - annual,
method = "rand_eob") %>%
select(name, method, diff)
conv_S <- df_fs_tmy_stable %>%
left_join(df_fs_stable %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(diff = savings - conv,
method = "conv") %>%
select(name, method, diff)
rand_final_S <- df_fs_tmy_stable %>%
left_join(df_fs_stable %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(diff = savings - rand,
method = "rand_final") %>%
select(name, method, diff)
df_TW_S <- rbind(rand_eob_S, conv_S, rand_final_S)
# plot for the variable subset
rand_eob_V <- df_sprt_all_variable %>%
filter(seq == "eob") %>%
select(-c(seq, n_weeks)) %>%
left_join(df_fs_variable %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(diff = savings - annual,
method = "rand_eob") %>%
select(name, method, diff)
conv_V <- df_fs_tmy_variable %>%
left_join(df_fs_variable %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(diff = savings - conv,
method = "conv") %>%
select(name, method, diff)
rand_final_V <- df_fs_tmy_variable %>%
left_join(df_fs_variable %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(diff = savings - rand,
method = "rand_final") %>%
select(name, method, diff)
df_TW_V <- rbind(rand_eob_V, conv_V, rand_final_V)
# plot for combined dataset
rand_eob_A <- bind_rows(rand_eob_V, rand_eob_S) %>%
select(name, rand_eob_diff = diff)
conv_A <- bind_rows(conv_V, conv_S) %>%
select(name, conv_diff = diff)
rand_final_A <- bind_rows(rand_final_V, rand_final_S) %>%
select(name, rand_final_diff = diff)
df_TW_A <- rand_eob_A %>%
left_join(conv_A, by = "name") %>%
left_join(rand_final_A, by = "name") %>%
pivot_longer(c(rand_eob_diff, conv_diff, rand_final_diff), names_to = "method", values_to = "diff")
p_middle <- df_TW_A %>%
mutate(method = as.factor(method),
method = recode_factor(method, "conv_diff" = "Conventional", "rand_eob_diff" = "Randomized", "rand_final_diff" = "Randomized\n(24 months)")) %>%
ggplot(aes(x = method, y = diff, fill = method)) +
geom_jitter(width = 0.2, alpha = 0.8, size = 0.5) +
geom_lv(k = 4, outlier.shape = NA) +
geom_boxplot(outlier.alpha = 0, coef = 0, fill = "#00000000", aes(color = method)) +
geom_hline(yintercept = 0, color = "#fb8072", linewidth = 1.5, lty = "dashed") +
geom_text(data = . %>% group_by(method) %>% summarise(mean = mean(diff)) %>% ungroup(),
aes(x = method, y = mean, label = paste0(round(mean, digits = 1), " %"))) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 4),
labels = number_format(suffix = " %")) +
scale_fill_manual(values = ls_colors) +
scale_color_manual(values = c("grey80", "grey80", "grey80")) +
labs(fill = NULL,
x = NULL,
y = "Mean error in fractional savings",
subtitle = str_glue("All {A_building} buildings with TOWT model and TMY weather")) +
coord_cartesian(ylim = c(-20, 20)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.position = "none",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
ggarrange(p_top, p_middle,
ncol = 1, nrow = 2,
labels = c("a)", "b)")) +
plot_annotation(title = "Mean error in savings estimation by different M&V methods")
ggsave(filename = "mean.png", path = fig_path, units = "in", height = 6, width = 12, dpi = 300)
#### MEAN-INT ####
# dropped version
df_drop <- df_interval_drop_stable %>%
bind_rows(df_interval_drop_variable) %>%
select(name, contains("fs")) %>%
rename("drop_1" = "interval_fs_1",
"drop_2" = "interval_fs_2",
"drop_3" = "interval_fs_3",
"drop_7" = "interval_fs_7")
df_keep <- df_interval_keep_stable %>%
bind_rows(df_interval_keep_variable) %>%
select(name, contains("fs")) %>%
rename("keep_1" = "interval_fs_1",
"keep_2" = "interval_fs_2",
"keep_3" = "interval_fs_3",
"keep_7" = "interval_fs_7")
df_MW_A <- df_drop %>%
left_join(df_keep, by = c("name")) %>%
left_join(rbind(df_fs_stable %>%
filter(scenario == "ref" & method == "true"),
df_fs_variable %>%
filter(scenario == "ref" & method == "true")), by = "name") %>%
mutate(drop_1 = savings - drop_1,
drop_2 = savings - drop_2,
drop_3 = savings - drop_3,
drop_7 = savings - drop_7,
keep_1 = savings - keep_1,
keep_2 = savings - keep_2,
keep_3 = savings - keep_3,
keep_7 = savings - keep_7) %>%
pivot_longer(cols = contains("drop") | contains("keep"),
names_to = c("group", "interval"),
names_pattern = "(drop|keep)_(\\d+)",
values_to = "diff")
p_top <- df_MW_A %>%
mutate(interval = as.factor(interval),
interval = recode_factor(interval,
"1" = "1-day\nsampling",
"2" = "2-day\nsampling",
"3" = "3-day\nsampling",
"7" = "7-day\nsampling"),
group = as.factor(group),
group = recode_factor(group, "drop" = "Dropped", "keep" = "Kept")) %>%
ggplot(aes(x = interval, y = diff, fill = group)) +
geom_jitter(alpha = 0.8,
size = 0.5,
position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.2)) +
geom_lv(k = 4, outlier.shape = NA) +
geom_boxplot(outlier.alpha = 0, coef = 0, fill = "#00000000", aes(color = group)) +
geom_hline(yintercept = 0, color = "#fb8072", linewidth = 1, lty = "dashed") +
geom_text(data = . %>% group_by(group, interval) %>% summarise(mean = mean(diff, na.rm = T)) %>% ungroup(),
aes(x = interval, y = mean, group = group,
label = paste0(round(mean, digits = 1), " %")),
position = position_dodge(width = 0.75)) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 5),
labels = number_format(suffix = " %")) +
scale_fill_manual(values = ls_colors) +
scale_color_manual(values = c("grey80", "grey80", "grey80")) +
labs(fill = NULL,
color = NULL,
x = NULL,
y = "Mean error in fractional savings",
subtitle = str_glue("All {A_building} buildings with measured weather")) +
coord_cartesian(ylim = c(-15, 15)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.position = "bottom",
axis.text.x = element_blank(),
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
# TMY version
df_drop <- df_interval_drop_stable %>%
bind_rows(df_interval_drop_variable) %>%
select(name, contains("tmy")) %>%
rename("drop_1" = "interval_tmy_1",
"drop_2" = "interval_tmy_2",
"drop_3" = "interval_tmy_3",
"drop_7" = "interval_tmy_7")
df_keep <- df_interval_keep_stable %>%
bind_rows(df_interval_keep_variable) %>%
select(name, contains("tmy")) %>%
rename("keep_1" = "interval_tmy_1",
"keep_2" = "interval_tmy_2",
"keep_3" = "interval_tmy_3",
"keep_7" = "interval_tmy_7")
df_TW_A <- df_drop %>%
left_join(df_keep, by = c("name")) %>%
left_join(rbind(df_fs_stable %>%
filter(scenario == "ref" & method == "true"),
df_fs_variable %>%
filter(scenario == "ref" & method == "true")), by = "name") %>%
mutate(drop_1 = savings - drop_1,
drop_2 = savings - drop_2,
drop_3 = savings - drop_3,
drop_7 = savings - drop_7,
keep_1 = savings - keep_1,
keep_2 = savings - keep_2,
keep_3 = savings - keep_3,
keep_7 = savings - keep_7) %>%
pivot_longer(cols = contains("drop") | contains("keep"),
names_to = c("group", "interval"),
names_pattern = "(drop|keep)_(\\d+)",
values_to = "diff")
p_bottom <- df_TW_A %>%
mutate(interval = as.factor(interval),
interval = recode_factor(interval,
"1" = "1-day\nsampling",
"2" = "2-day\nsampling",
"3" = "3-day\nsampling",
"7" = "7-day\nsampling"),
group = as.factor(group),
group = recode_factor(group, "drop" = "Dropped", "keep" = "Kept")) %>%
ggplot(aes(x = interval, y = diff, fill = group)) +
geom_jitter(alpha = 0.8,
size = 0.5,
position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.2)) +
geom_lv(k = 4, outlier.shape = NA, position = position_dodge(width = 0.8)) +
geom_boxplot(outlier.alpha = 0, coef = 0, fill = "#00000000", aes(color = group), width = 0.8) +
geom_hline(yintercept = 0, color = "#fb8072", linewidth = 1, lty = "dashed") +
geom_text(data = . %>% group_by(group, interval) %>% summarise(mean = mean(diff, na.rm = T)) %>% ungroup(),
aes(x = interval, y = mean, group = group,
label = paste0(round(mean, digits = 1), " %")),
position = position_dodge(width = 0.75)) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 5),
labels = number_format(suffix = " %")) +
scale_fill_manual(values = ls_colors) +
scale_color_manual(values = c("grey80", "grey80", "grey80")) +
labs(fill = NULL,
color = NULL,
x = NULL,
y = "Mean error in fractional savings",
subtitle = str_glue("All {A_building} buildings with TOWT model and TMY weather")) +
coord_cartesian(ylim = c(-15, 15)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.position = "bottom",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
ggarrange(p_top, p_bottom,
ncol = 1, nrow = 2,
align = "hv",
common.legend = T,
legend = "bottom") +
plot_annotation(title = "Mean error in savings estimation of randomized M&V by different sampling intervals")
ggsave(filename = "mean_interval.png", path = fig_path, units = "in", height = 9, width = 12, dpi = 300)
# sprt sequence plot for different sampling intervals
df_drop <- df_seq_interval_fs_drop_stable %>%
bind_rows(df_seq_interval_fs_drop_variable) %>%
select(name, eob, interval) %>%
mutate(group = "drop")
df_keep <- df_seq_interval_fs_keep_stable %>%
bind_rows(df_seq_interval_fs_keep_variable) %>%
select(name, eob, interval) %>%
mutate(group = "keep")
df_MW_A <- df_drop %>%
bind_rows(df_keep) %>%
left_join(rbind(df_fs_stable %>%
filter(scenario == "ref" & method == "true"),
df_fs_variable %>%
filter(scenario == "ref" & method == "true")), by = "name") %>%
mutate(diff = (savings - eob)) %>%
filter(is.finite(diff))
p_top <- df_MW_A %>%
mutate(interval = as.factor(interval),
interval = recode_factor(interval,
"1" = "1-day\nsampling",
"2" = "2-day\nsampling",
"3" = "3-day\nsampling",
"7" = "7-day\nsampling"),
group = as.factor(group),
group = recode_factor(group, "drop" = "Dropped", "keep" = "Kept")) %>%
ggplot(aes(x = interval, y = diff, fill = group)) +
geom_jitter(alpha = 0.8,
size = 0.5,
position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.2)) +
geom_lv(k = 4, outlier.shape = NA, position = position_dodge(width = 0.8)) +
geom_boxplot(outlier.alpha = 0, coef = 0, fill = "#00000000", aes(color = group), width = 0.8) +
geom_hline(yintercept = 0, color = "#fb8072", linewidth = 1, lty = "dashed") +
geom_text(data = . %>% group_by(group, interval) %>% summarise(mean = mean(diff, inf.rm = T)) %>% ungroup(),
aes(x = interval, y = mean, group = group,
label = paste0(round(mean, digits = 1), " %")),
position = position_dodge(width = 0.75)) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 5),
labels = number_format(suffix = " %")) +
scale_fill_manual(values = ls_colors) +
scale_color_manual(values = c("grey80", "grey80")) +
labs(fill = NULL,
color = NULL,
x = NULL,
y = "Absolute error in fractional savings",
subtitle = str_glue("All {A_building} buildings with measured weather")) +
coord_cartesian(ylim = c(-15, 15)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.position = "bottom",
axis.text.x = element_blank(),
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
# with tmy version
df_drop <- df_seq_interval_nm_drop_stable %>%
bind_rows(df_seq_interval_nm_drop_variable) %>%
select(name, eob, interval) %>%
mutate(group = "drop")
df_keep <- df_seq_interval_nm_keep_stable %>%
bind_rows(df_seq_interval_nm_keep_variable) %>%
select(name, eob, interval) %>%
mutate(group = "keep")
df_TW_A <- df_drop %>%
bind_rows(df_keep) %>%
left_join(rbind(df_fs_stable %>%
filter(scenario == "ref" & method == "true"),
df_fs_variable %>%
filter(scenario == "ref" & method == "true")), by = "name") %>%
mutate(diff = (savings - eob)) %>%
filter(is.finite(diff))
p_bottom <- df_TW_A %>%
mutate(interval = as.factor(interval),
interval = recode_factor(interval,
"1" = "1-day\nsampling",
"2" = "2-day\nsampling",
"3" = "3-day\nsampling",
"7" = "7-day\nsampling"),
group = as.factor(group),
group = recode_factor(group, "drop" = "Dropped", "keep" = "Kept")) %>%
ggplot(aes(x = interval, y = diff, fill = group)) +
geom_jitter(alpha = 0.8,
size = 0.5,
position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.2)) +
geom_lv(k = 4, outlier.shape = NA, position = position_dodge(width = 0.8)) +
geom_boxplot(outlier.alpha = 0, coef = 0, fill = "#00000000", aes(color = group), width = 0.8) +
geom_hline(yintercept = 0, color = "#fb8072", linewidth = 1, lty = "dashed") +
geom_text(data = . %>% group_by(group, interval) %>% summarise(mean = mean(diff, na.rm = T)) %>% ungroup(),
aes(x = interval, y = mean, group = group,
label = paste0(round(mean, digits = 1), " %")),
position = position_dodge(width = 0.75)) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 5),
labels = number_format(suffix = " %")) +
scale_fill_manual(values = ls_colors) +
scale_color_manual(values = c("grey80", "grey80")) +
labs(fill = NULL,
color = NULL,
x = NULL,
y = "Absolute error in fractional savings",
subtitle = str_glue("All {A_building} buildings with TOWT model and TMY weather")) +
coord_cartesian(ylim = c(-15, 15)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.position = "bottom",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
ggarrange(p_top, p_bottom,
ncol = 1, nrow = 2,
align = "hv",
common.legend = T,
legend = "bottom") +
plot_annotation(title = "Absolute error in savings estimation of randomized M&V after satisfying all stopping criteria")
ggsave(filename = "mean_interval_sprt.png", path = fig_path, units = "in", height = 9, width = 12, dpi = 300)
#### TIME-INT ####
# timeline to finish sequential test
df_drop <- bind_rows(df_seq_interval_tl_drop_stable, df_seq_interval_tl_drop_variable) %>%
mutate(group = "drop",
temp = ifelse(base_temp >= interv_temp, base_temp, interv_temp)) %>%
pivot_longer(c(sprt, temp, eob, final), names_to = "seq", values_to = "n_weeks") %>%
select(name, seq, n_weeks, interval, group)
interval_1_keep <- bind_rows(df_sprt_all_stable, df_sprt_all_variable) %>%
select(c(name, seq, n_weeks)) %>%
filter(seq != "final") %>%
mutate(seq = as.factor(seq)) %>%
mutate(interval = 1,
group = "keep")
df_keep <- bind_rows(df_seq_interval_tl_keep_stable, df_seq_interval_tl_keep_variable) %>%
mutate(group = "keep",
temp = ifelse(base_temp >= interv_temp, base_temp, interv_temp)) %>%
pivot_longer(c(sprt, temp, eob, final), names_to = "seq", values_to = "n_weeks") %>%
select(name, seq, n_weeks, interval, group) %>%
bind_rows(interval_1_keep)
df_MW_A <- bind_rows(df_keep, df_drop) %>%
filter(seq != "final") %>%
filter(seq == "eob") %>%
mutate(seq = as.factor(seq),
seq = recode_factor(seq,
"eob" = "Buildings finishing all criteria"),
interval = as.factor(interval),
interval = recode_factor(interval,
"1" = "1-day\nsampling",
"2" = "2-day\nsampling",
"3" = "3-day\nsampling",
"7" = "7-day\nsampling"),
group = as.factor(group),
group = recode_factor(group, "drop" = "Dropped", "keep" = "Kept"),
n_weeks = as.factor(n_weeks),
n_weeks = recode_factor(n_weeks,
"12" = "12\nweeks",
"24" = "24\nweeks",
"36" = "36\nweeks",
"48" = "48\nweeks",
"60" = "60\nweeks")) %>%
group_by(n_weeks, group, interval) %>%
summarise(n = n()) %>%
ungroup()
levA <- levels(df_MW_A$n_weeks)
levB <- levels(df_MW_A$group)
levC <- levels(df_MW_A$interval)
# 2. Expand to all combinations of factorA and factorB
all_combinations <- expand_grid(
n_weeks = levA,
group = levB,
interval = levC,
)
df_MW_A <- all_combinations %>%
left_join(df_MW_A, by = c("n_weeks", "group", "interval")) %>%
mutate(n = ifelse(is.na(n), 0, n)) %>%
group_by(group, interval) %>%
mutate(n = ifelse(n > sum(n) * 0.01, n, 0),
perc = n / sum(n) * 100) %>%
ungroup()
df_MW_A %>%
ggplot(aes(x = n_weeks, y = perc, fill = group)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~interval, nrow = 2) +
geom_text(aes(x = n_weeks, y = perc + 2, label = paste0(round(perc, digits = 0), "%"), group = group), position = position_dodge(1)) +
scale_fill_manual(values = ls_colors) +
scale_color_manual(values = ls_colors) +
scale_y_continuous(breaks = breaks_pretty(n = 4),
labels = number_format(suffix = " %")) +
labs(x = NULL,
y = NULL,
fill = NULL,
title = "Percentage of buildings satisfying all stopping critiera",
subtitle = "Counted at the end of each 12-week blocking period") +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.position = "bottom",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
df_MW_A %>%
ggplot(aes(x = n_weeks, y = perc, fill = group)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~interval, nrow = 2) +
geom_text(aes(x = n_weeks, y = perc + 5, label = paste0(round(perc, digits = 0), "%"), group = group), position = position_dodge(1), size = 5) +
scale_fill_manual(values = ls_colors) +
scale_color_manual(values = ls_colors) +
scale_y_continuous(breaks = breaks_pretty(n = 4),
labels = number_format(suffix = " %")) +
labs(x = NULL,
y = NULL,
fill = NULL,
title = "Percentage of buildings satisfying all stopping critiera",
subtitle = "Counted at the end of each 12-week blocking period") +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.position = "bottom",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
ggsave(filename = "timeline_interval_sprt.png", path = fig_path, units = "in", height = 8, width = 12, dpi = 300)
ggsave(filename = "timeline_interval_sprt.png", path = fig_path, units = "in", height = 7, width = 9, dpi = 300)
