select(name, method, diff)
df_TW_V <- rbind(rand_eob_V, conv_V, rand_final_V)
# plot for combined dataset
rand_eob_A <- bind_rows(rand_eob_V, rand_eob_S) %>%
select(name, rand_eob_diff = diff)
conv_A <- bind_rows(conv_V, conv_S) %>%
select(name, conv_diff = diff)
rand_final_A <- bind_rows(rand_final_V, rand_final_S) %>%
select(name, rand_final_diff = diff)
df_TW_A <- rand_eob_A %>%
left_join(conv_A, by = "name") %>%
left_join(rand_final_A, by = "name") %>%
pivot_longer(c(rand_eob_diff, conv_diff, rand_final_diff), names_to = "method", values_to = "diff")
p_middle <- df_TW_A %>%
mutate(method = as.factor(method),
method = recode_factor(method, "conv_diff" = "Conventional", "rand_eob_diff" = "Randomized", "rand_final_diff" = "Randomized\n(24 months)")) %>%
ggplot(aes(x = method, y = diff, fill = method)) +
geom_jitter(width = 0.2, alpha = 0.8, size = 0.5) +
geom_lv(k = 4, outlier.shape = NA) +
geom_boxplot(outlier.alpha = 0, coef = 0, fill = "#00000000", aes(color = method)) +
geom_hline(yintercept = 0, color = "#fb8072", linewidth = 1.5, lty = "dashed") +
geom_text(data = . %>% group_by(method) %>% summarise(mean = mean(diff)) %>% ungroup(),
aes(x = method, y = mean, label = paste0(round(mean, digits = 1), " %"))) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 4),
labels = number_format(suffix = " %")) +
scale_fill_manual(values = ls_colors) +
scale_color_manual(values = c("grey80", "grey80", "grey80")) +
labs(fill = NULL,
x = NULL,
y = "Absolute error in fractional savings",
subtitle = str_glue("All {A_building} buildings with TMY weather")) +
coord_cartesian(ylim = c(0, 23)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.position = "none",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
# Timeline plot
df_time <- df_sprt_all_variable %>%
filter(seq != "final") %>%
bind_rows(df_sprt_all_stable %>% filter(seq != "final")) %>%
select(name, seq, n_weeks)
count <- list()
n <- 1
for (i in seq(0, 36, by = 3)){
df_sprt <- df_time %>%
filter(seq == "sprt",
n_weeks <= i)
df_eob <- df_time %>%
filter(seq == "eob",
n_weeks <= i)
df_temp <- df_time %>%
filter(seq == "temp",
n_weeks <= i)
count[[n]] <- tibble("n_weeks" = i,
"eob" = nrow(df_eob),
"temp" = nrow(df_temp),
"sprt" = nrow(df_sprt))
n <- n + 1
}
count <- bind_rows(count)
p_bottom <- count %>%
ggplot() +
geom_bar(data = . %>%
filter(n_weeks == 24 | n_weeks == 36),
aes(x = n_weeks, y = eob, fill = "Buildings finishing randomized M&V"),
stat = "identity",
position = "stack",
alpha = 0.8,
width = 3) +
geom_line(aes(x = n_weeks, y = temp, color = "Buildings satisfying 80% TMY range"),
alpha = 0.2) +
geom_point(aes(x = n_weeks, y = temp, color = "Buildings satisfying 80% TMY range"),
size = 1.5) +
geom_line(aes(x = n_weeks, y = sprt, color = "Buildings satisfying SPRT"),
alpha = 0.2) +
geom_point(aes(x = n_weeks, y = sprt, color = "Buildings satisfying SPRT"),
size = 1.5,
shape = 17) +
geom_segment(aes(x = 36.5, y = max(eob), xend = 95.5, yend = max(eob)),
arrow = arrow(length = unit(0.25, "in")),
linewidth = 1.1,
color = "#fb8072") +
annotate(geom = "text",
x = 66,
y = max(count$eob) - 30,
size = 5,
label = "Excess time by conventional M&V") +
geom_vline(xintercept = c(12, 24, 36, 48, 96), lty = "dashed", color = "grey80") +
annotate(geom = "text",
x = seq(6, 48, by = 12),
y = 200,
label = paste0("12-week\nblock"),
alpha = 0.5) +
scale_fill_manual(values = ls_colors) +
scale_color_manual(values = ls_colors) +
scale_x_continuous(expand = c(0, 0),
limits = c(0, 100),
breaks = c(12, 24, 36, 48, 96),
labels = c("12 weeks", "24 weeks", "36 weeks", "1 year", "2 years")) +
coord_cartesian(ylim = c(0, 650)) +
labs(x = NULL,
y = "Number of buildings",
fill = NULL,
color = NULL,
subtitle = "timeline comparison") +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.direction = "horizontal",
legend.position = "bottom",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
ggarrange(p_top, p_middle, p_bottom,
ncol = 1, nrow = 3,
heights = c(1.2, 1.2, 1),
labels = c("a)", "b)", "c)"),
common.legend = T,
legend = "bottom") +
plot_annotation(title = "Overall comparison of conventional and randomized M&V")
#### MEAN-NULL ####
rand_eob_S <- df_seq_fs_null_stable %>%
filter(seq == "eob") %>%
mutate(diff = 0 - fs,
method = "rand_eob") %>%
select(name, method, diff)
conv_S <- df_fs_null_stable %>%
filter(method != "rand") %>%
pivot_wider(names_from = method, values_from = savings) %>%
mutate(diff = true - conv,
method = "conv") %>%
select(name, method, diff)
rand_final_S <- df_fs_null_stable %>%
filter(method != "conv") %>%
pivot_wider(names_from = method, values_from = savings) %>%
mutate(diff = true - rand,
method = "rand_final") %>%
select(name, method, diff)
df_MW_S <- rbind(rand_eob_S, conv_S, rand_final_S)
# plot for the variable subset
rand_eob_V <- df_seq_fs_null_variable %>%
filter(seq == "eob") %>%
mutate(diff = 0 - fs,
method = "rand_eob") %>%
select(name, method, diff)
conv_V <- df_fs_null_variable %>%
filter(method != "rand") %>%
pivot_wider(names_from = method, values_from = savings) %>%
mutate(diff = true - conv,
method = "conv") %>%
select(name, method, diff)
rand_final_V <- df_fs_null_variable %>%
filter(method != "conv") %>%
pivot_wider(names_from = method, values_from = savings) %>%
mutate(diff = true - rand,
method = "rand_final") %>%
select(name, method, diff)
df_MW_V <- rbind(rand_eob_V, conv_V, rand_final_V)
# plot for combined dataset
rand_eob_A <- bind_rows(rand_eob_V, rand_eob_S) %>%
select(name, rand_eob_diff = diff)
conv_A <- bind_rows(conv_V, conv_S) %>%
select(name, conv_diff = diff)
rand_final_A <- bind_rows(rand_final_V, rand_final_S) %>%
select(name, rand_final_diff = diff)
df_MW_A <- rand_eob_A %>%
left_join(conv_A, by = "name") %>%
left_join(rand_final_A, by = "name") %>%
pivot_longer(c(rand_eob_diff, conv_diff, rand_final_diff), names_to = "method", values_to = "diff")
df_MW_A %>%
mutate(method = as.factor(method),
method = recode_factor(method,
"conv_diff" = "Conventional",
"rand_eob_diff" = "Randomized",
"rand_final_diff" = "Randomized\n(24 months)")) %>%
ggplot(aes(x = method, y = diff, fill = method)) +
geom_jitter(width = 0.2, alpha = 0.8, size = 0.5) +
geom_lv(k = 4, outlier.shape = NA) +
geom_boxplot(outlier.alpha = 0, coef = 0, fill = "#00000000", aes(color = method)) +
geom_hline(yintercept = 0, color = "#fb8072", linewidth = 1, lty = "dashed") +
geom_text(data = . %>% group_by(method) %>% summarise(mean = mean(diff)) %>% ungroup(),
aes(x = method, y = mean, label = paste0(round(mean, digits = 1), " %"))) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 6),
labels = number_format(suffix = " %")) +
scale_fill_manual(values = ls_colors) +
scale_color_manual(values = c("grey80", "grey80", "grey80")) +
labs(fill = NULL,
x = NULL,
y = "Mean effect in fractional savings",
title = "Mean effect of non-routine events when using different M&V methods",
subtitle = str_glue("All {A_building} buildings with measured weather")) +
coord_cartesian(ylim = c(-18, 18)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.position = "none",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
df_model_acc_variable %>%
mutate(group = "variable subset") %>%
rbind(df_model_acc_stable %>% mutate(group = "stable subset")) %>%
mutate(group = as.factor(group)) %>%
ggplot(aes(x = group, y = cvrmse)) +
stat_boxplot(geom ='errorbar', width = 0.1) +
geom_boxplot(outlier.shape = NA, width = 0.25) +
geom_jitter(position = position_jitter(0.1), alpha = 0.1, size = 1.2) +
geom_text(aes(x = group, y = median, label = paste0(round(median, digits = 0), " %")),
data = . %>%
group_by(group) %>%
summarise(median = median(cvrmse)) %>%
ungroup(),
position = position_nudge(x = 0.25)) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 3),
labels = number_format(suffix = " %")) +
coord_cartesian(ylim = c(0, 50)) +
labs(x = NULL,
y = NULL,
color = NULL,
title = "TOWT model fitting accuracy",
subtitle = "CV(RMSE)") +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.direction = "horizontal",
legend.position = "none",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
#### ABS-INT ####
# dropped version
df_interval_keep_stable %<>%
left_join(df_fs_stable %>% filter(method == "rand"), by = c("name", "site")) %>%
select(-c("scenario", "method")) %>%
rename("interval_fs_1" = "savings") %>%
left_join(df_fs_tmy_stable, by = c("name", "site")) %>%
select(-conv) %>%
rename("interval_tmy_1" = "rand")
df_interval_keep_variable %<>%
left_join(df_fs_variable %>% filter(method == "rand"), by = c("name", "site")) %>%
select(-c("scenario", "method")) %>%
rename("interval_fs_1" = "savings") %>%
left_join(df_fs_tmy_variable, by = c("name", "site")) %>%
select(-conv) %>%
rename("interval_tmy_1" = "rand")
df_drop <- df_interval_drop_stable %>%
bind_rows(df_interval_drop_variable) %>%
select(name, contains("fs")) %>%
rename("drop_1" = "interval_fs_1",
"drop_2" = "interval_fs_2",
"drop_3" = "interval_fs_3",
"drop_7" = "interval_fs_7")
df_keep <- df_interval_keep_stable %>%
bind_rows(df_interval_keep_variable) %>%
select(name, contains("fs")) %>%
rename("keep_1" = "interval_fs_1",
"keep_2" = "interval_fs_2",
"keep_3" = "interval_fs_3",
"keep_7" = "interval_fs_7")
df_MW_A <- df_drop %>%
left_join(df_keep, by = c("name")) %>%
left_join(rbind(df_fs_stable %>%
filter(scenario == "ref" & method == "true"),
df_fs_variable %>%
filter(scenario == "ref" & method == "true")), by = "name") %>%
mutate(drop_1 = abs(drop_1 - savings),
drop_2 = abs(drop_2 - savings),
drop_3 = abs(drop_3 - savings),
drop_7 = abs(drop_7 - savings),
keep_1 = abs(keep_1 - savings),
keep_2 = abs(keep_2 - savings),
keep_3 = abs(keep_3 - savings),
keep_7 = abs(keep_7 - savings)) %>%
pivot_longer(cols = contains("drop") | contains("keep"),
names_to = c("group", "interval"),
names_pattern = "(drop|keep)_(\\d+)",
values_to = "diff")
p_top <- df_MW_A %>%
mutate(interval = as.factor(interval),
interval = recode_factor(interval,
"1" = "1-day\nsampling",
"2" = "2-day\nsampling",
"3" = "3-day\nsampling",
"7" = "7-day\nsampling"),
group = as.factor(group),
group = recode_factor(group, "drop" = "Dropped", "keep" = "Kept")) %>%
ggplot(aes(x = interval, y = diff, fill = group)) +
geom_jitter(alpha = 0.8,
size = 0.5,
position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.2)) +
geom_lv(k = 4, outlier.shape = NA, position = position_dodge(width = 0.8)) +
geom_boxplot(outlier.alpha = 0, coef = 0, fill = "#00000000", aes(color = group), width = 0.8) +
geom_hline(yintercept = 0, color = "#fb8072", linewidth = 1, lty = "dashed") +
geom_text(data = . %>% group_by(group, interval) %>% summarise(mean = mean(diff, na.rm = T)) %>% ungroup(),
aes(x = interval, y = mean, group = group,
label = paste0(round(mean, digits = 1), " %")),
position = position_dodge(width = 0.75)) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 4),
labels = number_format(suffix = " %")) +
scale_fill_manual(values = ls_colors) +
scale_color_manual(values = c("grey80", "grey80")) +
labs(fill = NULL,
color = NULL,
x = NULL,
y = "Absolute error in fractional savings",
subtitle = str_glue("All {A_building} buildings with measured weather")) +
coord_cartesian(ylim = c(0, 10)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.position = "bottom",
axis.text.x = element_blank(),
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
# TMY version
df_drop <- df_interval_drop_stable %>%
bind_rows(df_interval_drop_variable) %>%
select(name, contains("tmy")) %>%
rename("drop_1" = "interval_tmy_1",
"drop_2" = "interval_tmy_2",
"drop_3" = "interval_tmy_3",
"drop_7" = "interval_tmy_7")
df_keep <- df_interval_keep_stable %>%
bind_rows(df_interval_keep_variable) %>%
select(name, contains("tmy")) %>%
rename("keep_1" = "interval_tmy_1",
"keep_2" = "interval_tmy_2",
"keep_3" = "interval_tmy_3",
"keep_7" = "interval_tmy_7")
df_TW_A <- df_drop %>%
left_join(df_keep, by = c("name")) %>%
left_join(rbind(df_fs_stable %>%
filter(scenario == "ref" & method == "true"),
df_fs_variable %>%
filter(scenario == "ref" & method == "true")), by = "name") %>%
mutate(drop_1 = abs(drop_1 - savings),
drop_2 = abs(drop_2 - savings),
drop_3 = abs(drop_3 - savings),
drop_7 = abs(drop_7 - savings),
keep_1 = abs(keep_1 - savings),
keep_2 = abs(keep_2 - savings),
keep_3 = abs(keep_3 - savings),
keep_7 = abs(keep_7 - savings)) %>%
pivot_longer(cols = contains("drop") | contains("keep"),
names_to = c("group", "interval"),
names_pattern = "(drop|keep)_(\\d+)",
values_to = "diff")
p_bottom <- df_TW_A %>%
mutate(interval = as.factor(interval),
interval = recode_factor(interval,
"1" = "1-day\nsampling",
"2" = "2-day\nsampling",
"3" = "3-day\nsampling",
"7" = "7-day\nsampling"),
group = as.factor(group),
group = recode_factor(group, "drop" = "Dropped", "keep" = "Kept")) %>%
ggplot(aes(x = interval, y = diff, fill = group)) +
geom_jitter(alpha = 0.8,
size = 0.5,
position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.2)) +
geom_lv(k = 4, outlier.shape = NA, position = position_dodge(width = 0.8)) +
geom_boxplot(outlier.alpha = 0, coef = 0, fill = "#00000000", aes(color = group), width = 0.8) +
geom_hline(yintercept = 0, color = "#fb8072", linewidth = 1, lty = "dashed") +
geom_text(data = . %>% group_by(group, interval) %>% summarise(mean = mean(diff, na.rm = T)) %>% ungroup(),
aes(x = interval, y = mean, group = group,
label = paste0(round(mean, digits = 1), " %")),
position = position_dodge(width = 0.75)) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 4),
labels = number_format(suffix = " %")) +
scale_fill_manual(values = ls_colors) +
scale_color_manual(values = c("grey80", "grey80")) +
labs(fill = NULL,
color = NULL,
x = NULL,
y = "Absolute error in fractional savings",
subtitle = str_glue("All {A_building} buildings with TMY weather")) +
coord_cartesian(ylim = c(0, 10)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.position = "bottom",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
ggarrange(p_top, p_bottom,
ncol = 1, nrow = 2,
align = "hv",
common.legend = T,
legend = "bottom") +
plot_annotation(title = "Absolute error in savings estimation of ranodmized M&V by different sampling intervals")
# sprt sequence plot for different sampling intervals
df_seq_interval_fs_keep_stable %<>%
select(-c(sprt, temp, final)) %>%
bind_rows(df_seq_fs_stable %>%
filter(seq == "eob") %>%
select(-seq) %>%
mutate(interval = 1) %>%
rename(eob = "fs"))
df_seq_interval_fs_keep_variable %<>%
select(-c(sprt, temp, final)) %>%
bind_rows(df_seq_fs_variable %>%
filter(seq == "eob") %>%
select(-seq) %>%
mutate(interval = 1) %>%
rename(eob = "fs"))
df_drop <- df_seq_interval_fs_drop_stable %>%
bind_rows(df_seq_interval_fs_drop_variable) %>%
select(name, eob, interval) %>%
mutate(group = "drop")
df_keep <- df_seq_interval_fs_keep_stable %>%
bind_rows(df_seq_interval_fs_keep_variable) %>%
select(name, eob, interval) %>%
mutate(group = "keep")
df_MW_A <- df_drop %>%
bind_rows(df_keep) %>%
left_join(rbind(df_fs_stable %>%
filter(scenario == "ref" & method == "true"),
df_fs_variable %>%
filter(scenario == "ref" & method == "true")), by = "name") %>%
mutate(diff = abs(eob - savings)) %>%
filter(is.finite(diff))
p_top <- df_MW_A %>%
mutate(interval = as.factor(interval),
interval = recode_factor(interval,
"1" = "1-day\nsampling",
"2" = "2-day\nsampling",
"3" = "3-day\nsampling",
"7" = "7-day\nsampling"),
group = as.factor(group),
group = recode_factor(group, "drop" = "Dropped", "keep" = "Kept")) %>%
ggplot(aes(x = interval, y = diff, fill = group)) +
geom_jitter(alpha = 0.8,
size = 0.5,
position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.2)) +
geom_lv(k = 4, outlier.shape = NA, position = position_dodge(width = 0.8)) +
geom_boxplot(outlier.alpha = 0, coef = 0, fill = "#00000000", aes(color = group), width = 0.8) +
geom_hline(yintercept = 0, color = "#fb8072", linewidth = 1, lty = "dashed") +
geom_text(data = . %>% group_by(group, interval) %>% summarise(mean = mean(diff, inf.rm = T)) %>% ungroup(),
aes(x = interval, y = mean, group = group,
label = paste0(round(mean, digits = 1), " %")),
position = position_dodge(width = 0.75)) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 4),
labels = number_format(suffix = " %")) +
scale_fill_manual(values = ls_colors) +
scale_color_manual(values = c("grey80", "grey80")) +
labs(fill = NULL,
color = NULL,
x = NULL,
y = "Absolute error in fractional savings",
subtitle = str_glue("All {A_building} buildings with measured weather")) +
coord_cartesian(ylim = c(0, 20)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.position = "bottom",
axis.text.x = element_blank(),
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
# with tmy version
df_seq_interval_nm_keep_stable %<>%
select(-c(sprt, temp, final)) %>%
bind_rows(df_sprt_all_stable %>%
filter(seq == "eob") %>%
select(-c(seq, n_weeks)) %>%
mutate(interval = 1) %>%
rename(eob = "annual"))
df_seq_interval_nm_keep_variable %<>%
select(-c(sprt, temp, final)) %>%
bind_rows(df_sprt_all_variable %>%
filter(seq == "eob") %>%
select(-c(seq, n_weeks)) %>%
mutate(interval = 1) %>%
rename(eob = "annual"))
df_drop <- df_seq_interval_nm_drop_stable %>%
bind_rows(df_seq_interval_nm_drop_variable) %>%
select(name, eob, interval) %>%
mutate(group = "drop")
df_keep <- df_seq_interval_nm_keep_stable %>%
bind_rows(df_seq_interval_nm_keep_variable) %>%
select(name, eob, interval) %>%
mutate(group = "keep")
df_TW_A <- df_drop %>%
bind_rows(df_keep) %>%
left_join(rbind(df_fs_stable %>%
filter(scenario == "ref" & method == "true"),
df_fs_variable %>%
filter(scenario == "ref" & method == "true")), by = "name") %>%
mutate(diff = abs(eob - savings)) %>%
filter(is.finite(diff))
p_bottom <- df_TW_A %>%
mutate(interval = as.factor(interval),
interval = recode_factor(interval,
"1" = "1-day\nsampling",
"2" = "2-day\nsampling",
"3" = "3-day\nsampling",
"7" = "7-day\nsampling"),
group = as.factor(group),
group = recode_factor(group, "drop" = "Dropped", "keep" = "Kept")) %>%
ggplot(aes(x = interval, y = diff, fill = group)) +
geom_jitter(alpha = 0.8,
size = 0.5,
position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.2)) +
geom_lv(k = 4, outlier.shape = NA, position = position_dodge(width = 0.8)) +
geom_boxplot(outlier.alpha = 0, coef = 0, fill = "#00000000", aes(color = group), width = 0.8) +
geom_hline(yintercept = 0, color = "#fb8072", linewidth = 1, lty = "dashed") +
geom_text(data = . %>% group_by(group, interval) %>% summarise(mean = mean(diff, na.rm = T)) %>% ungroup(),
aes(x = interval, y = mean, group = group,
label = paste0(round(mean, digits = 1), " %")),
position = position_dodge(width = 0.75)) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 4),
labels = number_format(suffix = " %")) +
scale_fill_manual(values = ls_colors) +
scale_color_manual(values = c("grey80", "grey80")) +
labs(fill = NULL,
color = NULL,
x = NULL,
y = "Absolute error in fractional savings",
subtitle = str_glue("All {A_building} buildings with TMY weather")) +
coord_cartesian(ylim = c(0, 20)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.position = "bottom",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
ggarrange(p_top, p_bottom,
ncol = 1, nrow = 2,
align = "hv",
common.legend = T,
legend = "bottom") +
plot_annotation(title = "Absolute error in savings estimation of randomized M&V after satisfying all stopping criteria")
