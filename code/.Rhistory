Intervention = c(12, 12, 7, 7)
) %>%
pivot_longer(cols = c("Baseline", "Intervention"), names_to = "strategy", values_to = "value") %>%
ggplot(aes(x = OAT, y = value, color = strategy)) +
geom_line(linewidth = 1.2) +
scale_color_manual(values = ls_colors) +
scale_y_continuous(expand = c(0, 0),
breaks = c(4, 6, 8, 10, 12),
limits = c(5.5, 12.5),
labels = number_format(suffix = " °C")) +
scale_x_continuous(expand = c(0, 0),
breaks = c(5, 10, 15, 20, 25, 30),
labels = number_format(suffix = " °C")) +
geom_vline(xintercept = 10, lty = "dashed", color = "red") +
annotate(geom = "text", x = 7.5, y = 8, label = "No chiller operation\nbelow 10 °C") +
coord_cartesian(xlim = c(5, 30)) +
labs(x = "Outdoor temperature",
y = "Chilled water supply temperature",
color = NULL,
title = "Chilled water supply temperature reset intervention") +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.direction = "horizontal",
legend.position = "bottom",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
data.frame(
OAT = c(10, 15, 25, 30),
Baseline = c(6, 6, 6, 6),
Intervention = c(12, 12, 7, 7)
) %>%
pivot_longer(cols = c("Baseline", "Intervention"), names_to = "strategy", values_to = "value") %>%
ggplot(aes(x = OAT, y = value, color = strategy)) +
geom_line(linewidth = 1.2) +
scale_color_manual(values = ls_colors) +
scale_y_continuous(expand = c(0, 0),
breaks = c(4, 6, 8, 10, 12),
limits = c(5, 12.5),
labels = number_format(suffix = " °C")) +
scale_x_continuous(expand = c(0, 0),
breaks = c(5, 10, 15, 20, 25, 30),
labels = number_format(suffix = " °C")) +
geom_vline(xintercept = 10, lty = "dashed", color = "red") +
annotate(geom = "text", x = 7.5, y = 8, label = "No chiller operation\nbelow 10 °C") +
coord_cartesian(xlim = c(5, 30)) +
labs(x = "Outdoor temperature",
y = "Chilled water supply temperature",
color = NULL,
title = "Chilled water supply temperature reset intervention") +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.direction = "horizontal",
legend.position = "bottom",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
108 * 7
#### GA ####
rand_eob_S <- df_seq_fs_stable %>%
filter(seq == "eob") %>%
left_join(df_fs_stable %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(diff = abs(savings - fs),
method = "rand_eob") %>%
select(name, method, diff)
conv_S <- df_fs_stable %>%
filter(method != "rand") %>%
pivot_wider(names_from = method, values_from = savings) %>%
mutate(diff = abs(true - conv),
method = "conv") %>%
select(name, method, diff)
rand_final_S <- df_fs_stable %>%
filter(method != "conv") %>%
pivot_wider(names_from = method, values_from = savings) %>%
mutate(diff = abs(true - rand),
method = "rand_final") %>%
select(name, method, diff)
df_MW_S <- rbind(rand_eob_S, conv_S, rand_final_S)
# plot for the variable subset
rand_eob_V <- df_seq_fs_variable %>%
filter(seq == "eob") %>%
left_join(df_fs_variable %>% filter(scenario == "ref" & method == "true"), by = c("name", "site"))%>%
mutate(diff = abs(savings - fs),
method = "rand_eob") %>%
select(name, method, diff)
conv_V <- df_fs_variable %>%
filter(method != "rand") %>%
pivot_wider(names_from = method, values_from = savings) %>%
mutate(diff = abs(true - conv),
method = "conv") %>%
select(name, method, diff)
rand_final_V <- df_fs_variable %>%
filter(method != "conv") %>%
pivot_wider(names_from = method, values_from = savings) %>%
mutate(diff = abs(true - rand),
method = "rand_final") %>%
select(name, method, diff)
df_MW_V <- rbind(rand_eob_V, conv_V, rand_final_V)
# plot for combined dataset
rand_eob_A <- bind_rows(rand_eob_V, rand_eob_S) %>%
select(name, rand_eob_diff = diff)
conv_A <- bind_rows(conv_V, conv_S) %>%
select(name, conv_diff = diff)
rand_final_A <- bind_rows(rand_final_V, rand_final_S) %>%
select(name, rand_final_diff = diff)
df_MW_A <- rand_eob_A %>%
left_join(conv_A, by = "name") %>%
left_join(rand_final_A, by = "name") %>%
pivot_longer(c(rand_eob_diff, conv_diff, rand_final_diff), names_to = "method", values_to = "diff")
p_top <- df_MW_A %>%
mutate(method = as.factor(method),
method = recode_factor(method, "conv_diff" = "Conventional", "rand_eob_diff" = "Randomized", "rand_final_diff" = "Randomized\n(24 months)")) %>%
ggplot(aes(x = method, y = diff, fill = method)) +
geom_jitter(width = 0.2, alpha = 0.8, size = 0.5) +
geom_lv(k = 4, outlier.shape = NA) +
geom_boxplot(outlier.alpha = 0, coef = 0, fill = "#00000000", aes(color = method)) +
geom_hline(yintercept = 0, color = "#fb8072", linewidth = 1.5, lty = "dashed") +
geom_text(data = . %>% group_by(method) %>% summarise(mean = mean(diff, na.rm = T)) %>% ungroup(),
aes(x = method, y = mean, label = paste0(round(mean, digits = 1), " %"))) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 4),
labels = number_format(suffix = " %")) +
scale_fill_manual(values = ls_colors) +
scale_color_manual(values = c("grey80", "grey80", "grey80")) +
labs(fill = NULL,
color = NULL,
x = NULL,
y = "Absolute error in fractional savings",
subtitle = str_glue("All {A_building} buildings with measured weather")) +
coord_cartesian(ylim = c(0, 23)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.position = "none",
axis.text.x = element_blank(),
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
# TMY
# plot for the stable subset
rand_eob_S <- df_sprt_all_stable %>%
filter(seq == "eob") %>%
select(-c(seq, n_weeks)) %>%
left_join(df_fs_stable %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(diff = abs(savings - annual),
method = "rand_eob") %>%
select(name, method, diff)
conv_S <- df_fs_tmy_stable %>%
left_join(df_fs_stable %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(diff = abs(savings - conv),
method = "conv") %>%
select(name, method, diff)
rand_final_S <- df_fs_tmy_stable %>%
left_join(df_fs_stable %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(diff = abs(savings - rand),
method = "rand_final") %>%
select(name, method, diff)
df_TW_S <- rbind(rand_eob_S, conv_S, rand_final_S)
# plot for the variable subset
rand_eob_V <- df_sprt_all_variable %>%
filter(seq == "eob") %>%
select(-c(seq, n_weeks)) %>%
left_join(df_fs_variable %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(diff = abs(savings - annual),
method = "rand_eob") %>%
select(name, method, diff)
conv_V <- df_fs_tmy_variable %>%
left_join(df_fs_variable %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(diff = abs(savings - conv),
method = "conv") %>%
select(name, method, diff)
rand_final_V <- df_fs_tmy_variable %>%
left_join(df_fs_variable %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(diff = abs(savings - rand),
method = "rand_final") %>%
select(name, method, diff)
df_TW_V <- rbind(rand_eob_V, conv_V, rand_final_V)
# plot for combined dataset
rand_eob_A <- bind_rows(rand_eob_V, rand_eob_S) %>%
select(name, rand_eob_diff = diff)
conv_A <- bind_rows(conv_V, conv_S) %>%
select(name, conv_diff = diff)
rand_final_A <- bind_rows(rand_final_V, rand_final_S) %>%
select(name, rand_final_diff = diff)
df_TW_A <- rand_eob_A %>%
left_join(conv_A, by = "name") %>%
left_join(rand_final_A, by = "name") %>%
pivot_longer(c(rand_eob_diff, conv_diff, rand_final_diff), names_to = "method", values_to = "diff")
p_middle <- df_TW_A %>%
mutate(method = as.factor(method),
method = recode_factor(method, "conv_diff" = "Conventional", "rand_eob_diff" = "Randomized", "rand_final_diff" = "Randomized\n(24 months)")) %>%
ggplot(aes(x = method, y = diff, fill = method)) +
geom_jitter(width = 0.2, alpha = 0.8, size = 0.5) +
geom_lv(k = 4, outlier.shape = NA) +
geom_boxplot(outlier.alpha = 0, coef = 0, fill = "#00000000", aes(color = method)) +
geom_hline(yintercept = 0, color = "#fb8072", linewidth = 1.5, lty = "dashed") +
geom_text(data = . %>% group_by(method) %>% summarise(mean = mean(diff)) %>% ungroup(),
aes(x = method, y = mean, label = paste0(round(mean, digits = 1), " %"))) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 4),
labels = number_format(suffix = " %")) +
scale_fill_manual(values = ls_colors) +
scale_color_manual(values = c("grey80", "grey80", "grey80")) +
labs(fill = NULL,
x = NULL,
y = "Absolute error in fractional savings",
subtitle = str_glue("All {A_building} buildings with TMY weather")) +
coord_cartesian(ylim = c(0, 23)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.position = "none",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
p_accuracy <- ggarrange(p_top, p_middle,
ncol = 1, nrow = 2,
labels = c("a)", "b)"),
common.legend = T,
legend = "bottom")
# Timeline plot
df_time <- df_sprt_all_variable %>%
filter(seq != "final") %>%
bind_rows(df_sprt_all_stable %>% filter(seq != "final")) %>%
select(name, seq, n_weeks)
count <- list()
n <- 1
for (i in seq(0, 36, by = 3)){
df_sprt <- df_time %>%
filter(seq == "sprt",
n_weeks <= i)
df_eob <- df_time %>%
filter(seq == "eob",
n_weeks <= i)
df_temp <- df_time %>%
filter(seq == "temp",
n_weeks <= i)
count[[n]] <- tibble("n_weeks" = i,
"eob" = nrow(df_eob),
"temp" = nrow(df_temp),
"sprt" = nrow(df_sprt))
n <- n + 1
}
count <- bind_rows(count)
p_timeline <- count %>%
ggplot() +
geom_bar(data = . %>%
filter(n_weeks == 24 | n_weeks == 36),
aes(x = n_weeks, y = eob, fill = "Buildings finishing randomized M&V"),
stat = "identity",
position = "stack",
alpha = 0.8,
width = 3) +
geom_line(aes(x = n_weeks, y = temp, color = "Buildings satisfying 80% TMY range"),
alpha = 0.2) +
geom_point(aes(x = n_weeks, y = temp, color = "Buildings satisfying 80% TMY range"),
size = 1.5) +
geom_line(aes(x = n_weeks, y = sprt, color = "Buildings satisfying SPRT"),
alpha = 0.2) +
geom_point(aes(x = n_weeks, y = sprt, color = "Buildings satisfying SPRT"),
size = 1.5,
shape = 17) +
geom_segment(aes(x = 36.5, y = max(eob), xend = 95.5, yend = max(eob)),
arrow = arrow(length = unit(0.25, "in")),
linewidth = 1.1,
color = "#fb8072") +
annotate(geom = "text",
x = 66,
y = max(count$eob) - 30,
size = 5,
label = "Excess time by conventional M&V") +
geom_vline(xintercept = c(12, 24, 36, 48, 96), lty = "dashed", color = "grey80") +
annotate(geom = "text",
x = seq(6, 48, by = 12),
y = 200,
label = paste0("12-week\nblock"),
alpha = 0.5) +
scale_fill_manual(values = ls_colors) +
scale_color_manual(values = ls_colors) +
scale_x_continuous(expand = c(0, 0),
limits = c(0, 100),
breaks = c(12, 24, 36, 48, 96),
labels = c("12 weeks", "24 weeks", "36 weeks", "1 year", "2 years")) +
coord_cartesian(ylim = c(0, 650)) +
labs(x = NULL,
y = "Number of buildings",
fill = NULL,
color = NULL,
subtitle = "timeline comparison") +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.direction = "horizontal",
legend.position = "bottom",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
ggarrange(p_accuracy, p_timeline,
ncol = 1, nrow = 2,
heights = c(2.2, 1),
labels = c("", "c)"),
common.legend = F,
legend = "bottom") +
plot_annotation(title = "Overall comparison of conventional and randomized M&V")
#### MEAN-NULL ####
rand_eob_S <- df_seq_fs_null_stable %>%
filter(seq == "eob") %>%
mutate(diff = 0 - fs,
method = "rand_eob") %>%
select(name, method, diff)
conv_S <- df_fs_null_stable %>%
filter(method != "rand") %>%
pivot_wider(names_from = method, values_from = savings) %>%
mutate(diff = true - conv,
method = "conv") %>%
select(name, method, diff)
rand_final_S <- df_fs_null_stable %>%
filter(method != "conv") %>%
pivot_wider(names_from = method, values_from = savings) %>%
mutate(diff = true - rand,
method = "rand_final") %>%
select(name, method, diff)
df_MW_S <- rbind(rand_eob_S, conv_S, rand_final_S)
# plot for the variable subset
rand_eob_V <- df_seq_fs_null_variable %>%
filter(seq == "eob") %>%
mutate(diff = 0 - fs,
method = "rand_eob") %>%
select(name, method, diff)
conv_V <- df_fs_null_variable %>%
filter(method != "rand") %>%
pivot_wider(names_from = method, values_from = savings) %>%
mutate(diff = true - conv,
method = "conv") %>%
select(name, method, diff)
rand_final_V <- df_fs_null_variable %>%
filter(method != "conv") %>%
pivot_wider(names_from = method, values_from = savings) %>%
mutate(diff = true - rand,
method = "rand_final") %>%
select(name, method, diff)
df_MW_V <- rbind(rand_eob_V, conv_V, rand_final_V)
# plot for combined dataset
rand_eob_A <- bind_rows(rand_eob_V, rand_eob_S) %>%
select(name, rand_eob_diff = diff)
conv_A <- bind_rows(conv_V, conv_S) %>%
select(name, conv_diff = diff)
rand_final_A <- bind_rows(rand_final_V, rand_final_S) %>%
select(name, rand_final_diff = diff)
df_MW_A <- rand_eob_A %>%
left_join(conv_A, by = "name") %>%
left_join(rand_final_A, by = "name") %>%
pivot_longer(c(rand_eob_diff, conv_diff, rand_final_diff), names_to = "method", values_to = "diff")
df_MW_A %>%
mutate(method = as.factor(method),
method = recode_factor(method,
"conv_diff" = "Conventional",
"rand_eob_diff" = "Randomized",
"rand_final_diff" = "Randomized\n(24 months)")) %>%
ggplot(aes(x = method, y = diff, fill = method)) +
geom_jitter(width = 0.2, alpha = 0.8, size = 0.5) +
geom_lv(k = 4, outlier.shape = NA) +
geom_boxplot(outlier.alpha = 0, coef = 0, fill = "#00000000", aes(color = method)) +
geom_hline(yintercept = 0, color = "#fb8072", linewidth = 1, lty = "dashed") +
geom_text(data = . %>% group_by(method) %>% summarise(mean = mean(diff)) %>% ungroup(),
aes(x = method, y = mean, label = paste0(round(mean, digits = 1), " %"))) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 6),
labels = number_format(suffix = " %")) +
scale_fill_manual(values = ls_colors) +
scale_color_manual(values = c("grey80", "grey80", "grey80")) +
labs(fill = NULL,
x = NULL,
y = "Mean effect in fractional savings",
title = "Mean effect of non-routine events when using different M&V methods",
subtitle = str_glue("All {A_building} buildings with measured weather")) +
coord_cartesian(ylim = c(-18, 18)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.position = "none",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
setwd("~/Documents/Mac/ClassMaterial/ARCH299/Genome/cbe_genome_mnv/code")
#### LIBRARIES ####
require(pacman)
# load packages using pacman
pacman::p_load(tidyverse, lubridate, here, stats, zoo, scales, lvplot, ggpubr, gridExtra, patchwork, RColorBrewer)
# turn off scientific notation
options(scipen = 999, digits = 15)
# set directory
here::i_am("code.Rproj")
# set default theme for ggplot
theme_set(theme_minimal())
# define base ggplot theme
theme_update(plot.title = element_text(size = 14, colour = "grey20", face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, colour = "grey20", face = "italic", hjust = 0.5, margin = margin(b = 10)),
plot.caption = element_text(size = 10, colour = "grey20", face = "italic", hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_text(size = 10),
strip.text = element_text(size = 10, color = "grey20", face = "bold"),
strip.background = element_blank())
# colors
ls_colors <- c("Baseline" = "#c6dbef",
"Measured baseline" = "#c6dbef",
"Adjusted baseline" = "#c6dbef",
"Projected baseline" = "#2171b5",
"Intervention" = "#fdbb84",
"Measured interv" = "#fdbb84",
"Conventional" = "grey70",
"Randomized" = "#99d8c9",
"Randomized\n(24 months)" = "#66c2a4",
"Randomized\n(50/50)" = "#66c2a4",
"Daily\nsampling" = "#66c2a4",
"2-day\nsampling" = "#66c2a4",
"3-day\nsampling" = "#66c2a4",
"7-day\nsampling" = "#66c2a4",
"Dropped" = "#41ae76",
"Kept" = "#006d2c",
"Randomized\n(20/80)" = "#ccece6",
"Buildings finishing randomized M&V" =  "#99d8c9",
"Buildings satisfying 80% TMY range" = "black",
"Buildings satisfying SPRT" = "black")
# parameters
ctr_params <- list(peak_hours = 10:16,
chwl_perc = 0.25,
step_perc = 0.08,
conv_swt = 6,
weather_knots = c(15, 25),
swt_knots = c(12, 7),
coe_peak = 0.8,
coe_off = 1.2,
enable_temp = 8)
#### FUNCTIONS ####
# Function defined to read downloaded tmy files
get_tmy <- function(all_sites, readfile_path){
df_tmy <- data.frame()
for (site in all_sites){
df <- read_csv(paste0(readfile_path, "tmy/", str_glue("{site}.epw")),
skip = 8, col_types = "ddddd-d---------------------------------",
col_names = c("year", "month", "day", "hour", "min", "tmy")) %>%
mutate(year = 2017,
time = ymd_h(paste(paste(year, month, day, sep = "-"), hour, sep = " ")),
temp = tmy) %>%
dplyr::select(time, temp) %>%
mutate(site = site)
df_tmy <- rbind(df_tmy, df)
}
return(df_tmy)
}
#### LIBRARIES ####
require(pacman)
# load packages using pacman
pacman::p_load(tidyverse, lubridate, here, stats, zoo, scales, lvplot, ggpubr, gridExtra, patchwork, RColorBrewer)
# turn off scientific notation
options(scipen = 999, digits = 15)
# set directory
here::i_am("code.Rproj")
# set default theme for ggplot
theme_set(theme_minimal())
# define base ggplot theme
theme_update(plot.title = element_text(size = 16, colour = "grey20", face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 14, colour = "grey20", face = "italic", hjust = 0.5, margin = margin(b = 10)),
plot.caption = element_text(size = 10, colour = "grey20", face = "italic", hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_text(size = 12),
legend.text = element_text(size = 12),
strip.text = element_text(size = 12, color = "grey20", face = "bold"),
strip.background = element_blank())
source("~/Documents/Mac/ClassMaterial/ARCH299/Genome/cbe_genome_mnv/code/graphical.R", echo=TRUE)
df_MW_A %>%
ggplot(aes(x = n_weeks, y = perc, fill = group)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~interval, nrow = 2) +
geom_text(aes(x = n_weeks, y = perc + 5, label = paste0(round(perc, digits = 0), "%"), group = group), position = position_dodge(1), size = 5) +
scale_fill_manual(values = ls_colors) +
scale_color_manual(values = ls_colors) +
scale_y_continuous(breaks = breaks_pretty(n = 4),
labels = number_format(suffix = " %")) +
labs(x = NULL,
y = NULL,
fill = NULL,
title = "Percentage of buildings satisfying all stopping critiera",
subtitle = "Counted at the end of each 6-week blocking period") +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.position = "bottom",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
ggsave(filename = "timeline_interval_sprt.png", path = fig_path, units = "in", height = 8, width = 12, dpi = 300)
ggsave(filename = "timeline_interval_sprt.png", path = fig_path, units = "in", height = 8, width = 14, dpi = 300)
df_MW_A %>%
ggplot(aes(x = n_weeks, y = perc, fill = group)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~interval, nrow = 2) +
geom_text(aes(x = n_weeks, y = perc + 5, label = paste0(round(perc, digits = 0), "%"), group = group), size = 5) +
scale_fill_manual(values = ls_colors) +
scale_color_manual(values = ls_colors) +
scale_y_continuous(breaks = breaks_pretty(n = 4),
labels = number_format(suffix = " %")) +
labs(x = NULL,
y = NULL,
fill = NULL,
title = "Percentage of buildings satisfying all stopping critiera",
subtitle = "Counted at the end of each 6-week blocking period") +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.position = "bottom",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
ggsave(filename = "timeline_interval_sprt.png", path = fig_path, units = "in", height = 8, width = 14, dpi = 300)
df_MW_A %>%
ggplot(aes(x = n_weeks, y = perc, fill = group)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~interval, nrow = 2) +
geom_text(aes(x = n_weeks, y = perc + 5, label = paste0(round(perc, digits = 0), "%"), group = group), position = position_dodge(1), size = 5) +
scale_fill_manual(values = ls_colors) +
scale_color_manual(values = ls_colors) +
scale_y_continuous(breaks = breaks_pretty(n = 4),
labels = number_format(suffix = " %")) +
labs(x = NULL,
y = NULL,
fill = NULL,
title = "Percentage of buildings satisfying all stopping critiera",
subtitle = "Counted at the end of each 6-week blocking period") +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.position = "bottom",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
ggsave(filename = "timeline_interval_sprt.png", path = fig_path, units = "in", height = 8, width = 14, dpi = 300)
ggsave(filename = "timeline_interval_sprt.png", path = fig_path, units = "in", height = 8, width = 15, dpi = 300)
ggsave(filename = "timeline_interval_sprt.png", path = fig_path, units = "in", height = 6, width = 15, dpi = 300)
8
ggsave(filename = "timeline_interval_sprt.png", path = fig_path, units = "in", height = 8, width = 15, dpi = 300)
