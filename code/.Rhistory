plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
plot_data <- df_cont_FS_messy %>%
rename(cont = FS) %>%
left_join(df_FS_messy %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(abs_diff = abs(savings - cont),
plot_max = max(abs_diff))
median_rand <- median(plot_data$abs_diff)
upper_rand <- quantile(plot_data$abs_diff, probs = 0.95)
p2 <- plot_data %>%
arrange(abs_diff) %>%
ggplot() +
geom_bar(aes(x = seq(1, nrow(all_names_messy), by = 1), y = abs_diff),
stat = "identity", alpha = 0.5) +
geom_hline(yintercept = median_rand,
linetype = "dashed",
color = "red") +
annotate(y = median_rand + 0.5,
x = 220,
geom = "text",
label = paste0("(", "50% buildings: < ", round(median_rand, digits = 1), " %)"),
size = 4) +
geom_hline(yintercept = upper_rand,
linetype = "dashed",
color = "red") +
annotate(y = upper_rand + 0.5,
x = 220,
geom = "text",
label = paste0("(", "95% buildings: < ", round(upper_rand, digits = 1), " %)"),
size = 4) +
scale_x_continuous(expand = c(0.02, 0),
breaks = breaks_pretty(n = 3)) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 3),
labels = number_format(suffix = " %"),
limits = c(0, max(plot_data$plot_max) + 0.5)) +
labs(x = "Number of buildings",
y = "Absolute difference in measured savings",
subtitle = "Randomized M&V at early stop") +
coord_cartesian(ylim = c(0, 20)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.direction = "horizontal",
legend.position = "bottom",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
ggarrange(p1, p2,
ncol=2, nrow=1,
labels = c("a)", "b)"),
align = "hv",
legend="bottom") +
plot_annotation(title = str_glue("M&V method accuracy comparison"),
subtitle = "fractional savings in tidy subset")
plot_data <- df_cont_FS_tidy %>%
rename(cont = FS) %>%
left_join(df_FS_tidy %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(abs_diff = abs(savings - cont),
plot_max = max(abs_diff))
median_rand <- median(plot_data$abs_diff)
upper_rand <- quantile(plot_data$abs_diff, probs = 0.95)
p1 <- plot_data %>%
arrange(abs_diff) %>%
ggplot() +
geom_bar(aes(x = seq(1, nrow(all_names_tidy), by = 1), y = abs_diff),
stat = "identity", alpha = 0.5) +
geom_hline(yintercept = median_rand,
linetype = "dashed",
color = "red") +
annotate(y = median_rand + 0.5,
x = 20,
geom = "text",
label = paste0("(", "50% buildings: < ", round(median_rand, digits = 1), " %)"),
size = 4) +
geom_hline(yintercept = upper_rand,
linetype = "dashed",
color = "red") +
annotate(y = upper_rand + 0.5,
x = 20,
geom = "text",
label = paste0("(", "95% buildings: < ", round(upper_rand, digits = 1), " %)"),
size = 4) +
scale_x_continuous(expand = c(0.02, 0),
breaks = breaks_pretty(n = 3)) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 3),
labels = number_format(suffix = " %"),
limits = c(0, max(plot_data$plot_max) + 0.5)) +
labs(x = "Number of buildings",
y = "Absolute difference in measured savings",
subtitle = "Randomized M&V at early stop") +
coord_cartesian(ylim = c(0, 25)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.direction = "horizontal",
legend.position = "bottom",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
plot_data <- df_cont_FS_messy %>%
rename(cont = FS) %>%
left_join(df_FS_messy %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(abs_diff = abs(savings - cont),
plot_max = max(abs_diff))
median_rand <- median(plot_data$abs_diff)
upper_rand <- quantile(plot_data$abs_diff, probs = 0.95)
p2 <- plot_data %>%
arrange(abs_diff) %>%
ggplot() +
geom_bar(aes(x = seq(1, nrow(all_names_messy), by = 1), y = abs_diff),
stat = "identity", alpha = 0.5) +
geom_hline(yintercept = median_rand,
linetype = "dashed",
color = "red") +
annotate(y = median_rand + 0.5,
x = 220,
geom = "text",
label = paste0("(", "50% buildings: < ", round(median_rand, digits = 1), " %)"),
size = 4) +
geom_hline(yintercept = upper_rand,
linetype = "dashed",
color = "red") +
annotate(y = upper_rand + 0.5,
x = 220,
geom = "text",
label = paste0("(", "95% buildings: < ", round(upper_rand, digits = 1), " %)"),
size = 4) +
scale_x_continuous(expand = c(0.02, 0),
breaks = breaks_pretty(n = 3)) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 3),
labels = number_format(suffix = " %"),
limits = c(0, max(plot_data$plot_max) + 0.5)) +
labs(x = "Number of buildings",
y = "Absolute difference in measured savings",
subtitle = "Randomized M&V at early stop") +
coord_cartesian(ylim = c(0, 25)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.direction = "horizontal",
legend.position = "bottom",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
ggarrange(p1, p2,
ncol=2, nrow=1,
labels = c("a)", "b)"),
align = "hv",
legend="bottom") +
plot_annotation(title = str_glue("M&V method accuracy comparison"),
subtitle = "fractional savings in tidy subset")
plot_data <- df_seq_FS_tidy %>%
filter(seq == "eob") %>%
left_join(df_FS_tidy %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(abs_diff = abs(savings - FS),
plot_max = max(abs_diff))
median_rand <- median(plot_data$abs_diff)
upper_rand <- quantile(plot_data$abs_diff, probs = 0.95)
p1 <- plot_data %>%
arrange(abs_diff) %>%
ggplot() +
geom_bar(aes(x = seq(1, nrow(all_names_tidy), by = 1), y = abs_diff),
stat = "identity", alpha = 0.5) +
geom_hline(yintercept = median_rand,
linetype = "dashed",
color = "red") +
annotate(y = median_rand + 0.5,
x = 20,
geom = "text",
label = paste0("(", "50% buildings: < ", round(median_rand, digits = 1), " %)"),
size = 4) +
geom_hline(yintercept = upper_rand,
linetype = "dashed",
color = "red") +
annotate(y = upper_rand + 0.5,
x = 20,
geom = "text",
label = paste0("(", "95% buildings: < ", round(upper_rand, digits = 1), " %)"),
size = 4) +
scale_x_continuous(expand = c(0.02, 0),
breaks = breaks_pretty(n = 3)) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 3),
labels = number_format(suffix = " %"),
limits = c(0, max(plot_data$plot_max) + 0.5)) +
labs(x = "Number of buildings",
y = "Absolute difference in measured savings",
subtitle = "Randomized M&V at early stop") +
coord_cartesian(ylim = c(0, 10)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.direction = "horizontal",
legend.position = "bottom",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
plot_data <- df_FS_tidy %>%
filter(method != "rand") %>%
group_by(name) %>%
summarise(abs_diff = abs(diff(savings))) %>%
ungroup() %>%
mutate(plot_max = max(abs_diff))
median_conv <- median(plot_data$abs_diff)
upper_conv <- quantile(plot_data$abs_diff, probs = 0.95)
p2 <- plot_data %>%
arrange(abs_diff) %>%
ggplot() +
geom_bar(aes(x = seq(1, nrow(all_names_tidy), by = 1), y = abs_diff),
stat = "identity", alpha = 0.5) +
geom_hline(yintercept = median_conv,
linetype = "dashed",
color = "red") +
annotate(y = median_conv + 0.5,
x = 20,
geom = "text",
label = paste0("(", "50% buildings: < ", round(median_conv, digits = 1), " %)"),
size = 4) +
geom_hline(yintercept = upper_conv,
linetype = "dashed",
color = "red") +
annotate(y = upper_conv + 0.5,
x = 20,
geom = "text",
label = paste0("(", "95% buildings: < ", round(upper_conv, digits = 1), " %)"),
size = 4) +
scale_x_continuous(expand = c(0.02, 0),
breaks = breaks_pretty(n = 3)) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 3),
labels = number_format(suffix = " %"),
limits = c(0, max(plot_data$plot_max) + 0.1)) +
labs(x = "Number of buildings",
y = NULL,
subtitle = "Conventional M&V") +
coord_cartesian(ylim = c(0, 10)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.direction = "horizontal",
legend.position = "bottom",
axis.text.y = element_blank(),
plot.margin = margin(t = 2, r = 7, b = 2, l = 0, unit = "mm"))
ggarrange(p1, p2,
ncol=2, nrow=1,
labels = c("a)", "b)"),
align = "hv",
legend="bottom") +
plot_annotation(title = str_glue("M&V method accuracy comparison"),
subtitle = "fractional savings in tidy subset")
plot_data <- df_seq_FS_messy %>%
filter(seq == "eob") %>%
left_join(df_FS_messy %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(abs_diff = abs(savings - FS),
plot_max = max(abs_diff))
median_rand <- median(plot_data$abs_diff)
upper_rand <- quantile(plot_data$abs_diff, probs = 0.95)
p1 <- plot_data %>%
arrange(abs_diff) %>%
ggplot() +
geom_bar(aes(x = seq(1, nrow(all_names_messy), by = 1), y = abs_diff),
stat = "identity", alpha = 0.5) +
geom_hline(yintercept = median_rand,
linetype = "dashed",
color = "red") +
annotate(y = median_rand + 1,
x = 220,
geom = "text",
label = paste0("(", "50% buildings: < ", round(median_rand, digits = 1), " %)"),
size = 4) +
geom_hline(yintercept = upper_rand,
linetype = "dashed",
color = "red") +
annotate(y = upper_rand + 1,
x = 220,
geom = "text",
label = paste0("(", "95% buildings: < ", round(upper_rand, digits = 1), " %)"),
size = 4) +
scale_x_continuous(expand = c(0.02, 0),
breaks = breaks_pretty(n = 3)) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 3),
labels = number_format(suffix = " %"),
limits = c(0, max(plot_data$plot_max) + 0.5)) +
labs(x = "Number of buildings",
y = "Absolute difference in measured savings",
subtitle = "Randomized M&V at early stop") +
coord_cartesian(ylim = c(0, 25)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.direction = "horizontal",
legend.position = "bottom",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
plot_data <- df_FS_messy %>%
filter(method != "rand") %>%
group_by(name) %>%
summarise(abs_diff = abs(diff(savings))) %>%
ungroup() %>%
mutate(plot_max = max(abs_diff))
median_conv <- median(plot_data$abs_diff)
upper_conv <- quantile(plot_data$abs_diff, probs = 0.95)
p2 <- plot_data %>%
arrange(abs_diff) %>%
ggplot() +
geom_bar(aes(x = seq(1, nrow(all_names_messy), by = 1), y = abs_diff),
stat = "identity", alpha = 0.5) +
geom_hline(yintercept = median_conv,
linetype = "dashed",
color = "red") +
annotate(y = median_conv + 1,
x = 220,
geom = "text",
label = paste0("(", "50% buildings: < ", round(median_conv, digits = 1), " %)"),
size = 4) +
geom_hline(yintercept = upper_conv,
linetype = "dashed",
color = "red") +
annotate(y = upper_conv + 1,
x = 220,
geom = "text",
label = paste0("(", "95% buildings: < ", round(upper_conv, digits = 1), " %)"),
size = 4) +
scale_x_continuous(expand = c(0.02, 0),
breaks = breaks_pretty(n = 3)) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 3),
labels = number_format(suffix = " %"),
limits = c(0, max(plot_data$plot_max) + 0.1)) +
labs(x = "Number of buildings",
y = NULL,
subtitle = "Conventional M&V") +
coord_cartesian(ylim = c(0, 25)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.direction = "horizontal",
legend.position = "bottom",
axis.text.y = element_blank(),
plot.margin = margin(t = 2, r = 7, b = 2, l = 0, unit = "mm"))
ggarrange(p1, p2,
ncol=2, nrow=1,
labels = c("a)", "b)"),
align = "hv",
legend="bottom") +
plot_annotation(title = str_glue("M&V method accuracy comparison"),
subtitle = "fractional savings in messy subset")
plot_data <- df_cont_FS_tidy %>%
rename(cont = FS) %>%
left_join(df_FS_tidy %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(abs_diff = abs(savings - cont),
plot_max = max(abs_diff))
median_rand <- median(plot_data$abs_diff)
upper_rand <- quantile(plot_data$abs_diff, probs = 0.95)
p1 <- plot_data %>%
arrange(abs_diff) %>%
ggplot() +
geom_bar(aes(x = seq(1, nrow(all_names_tidy), by = 1), y = abs_diff),
stat = "identity", alpha = 0.5) +
geom_hline(yintercept = median_rand,
linetype = "dashed",
color = "red") +
annotate(y = median_rand + 0.5,
x = 20,
geom = "text",
label = paste0("(", "50% buildings: < ", round(median_rand, digits = 1), " %)"),
size = 4) +
geom_hline(yintercept = upper_rand,
linetype = "dashed",
color = "red") +
annotate(y = upper_rand + 0.5,
x = 20,
geom = "text",
label = paste0("(", "95% buildings: < ", round(upper_rand, digits = 1), " %)"),
size = 4) +
scale_x_continuous(expand = c(0.02, 0),
breaks = breaks_pretty(n = 3)) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 3),
labels = number_format(suffix = " %"),
limits = c(0, max(plot_data$plot_max) + 0.5)) +
labs(x = "Number of buildings",
y = "Absolute difference in measured savings",
subtitle = "Randomized M&V at early stop") +
coord_cartesian(ylim = c(0, 25)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.direction = "horizontal",
legend.position = "bottom",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
plot_data <- df_cont_FS_messy %>%
rename(cont = FS) %>%
left_join(df_FS_messy %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(abs_diff = abs(savings - cont),
plot_max = max(abs_diff))
median_rand <- median(plot_data$abs_diff)
upper_rand <- quantile(plot_data$abs_diff, probs = 0.95)
p2 <- plot_data %>%
arrange(abs_diff) %>%
ggplot() +
geom_bar(aes(x = seq(1, nrow(all_names_messy), by = 1), y = abs_diff),
stat = "identity", alpha = 0.5) +
geom_hline(yintercept = median_rand,
linetype = "dashed",
color = "red") +
annotate(y = median_rand + 0.5,
x = 220,
geom = "text",
label = paste0("(", "50% buildings: < ", round(median_rand, digits = 1), " %)"),
size = 4) +
geom_hline(yintercept = upper_rand,
linetype = "dashed",
color = "red") +
annotate(y = upper_rand + 0.5,
x = 220,
geom = "text",
label = paste0("(", "95% buildings: < ", round(upper_rand, digits = 1), " %)"),
size = 4) +
scale_x_continuous(expand = c(0.02, 0),
breaks = breaks_pretty(n = 3)) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 3),
labels = number_format(suffix = " %"),
limits = c(0, max(plot_data$plot_max) + 0.1)) +
labs(x = "Number of buildings",
y = NULL,
subtitle = "Conventional M&V") +
coord_cartesian(ylim = c(0, 25)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.direction = "horizontal",
legend.position = "bottom",
axis.text.y = element_blank(),
plot.margin = margin(t = 2, r = 7, b = 2, l = 0, unit = "mm"))
ggarrange(p1, p2,
ncol=2, nrow=1,
labels = c("a)", "b)"),
align = "hv",
legend="bottom") +
plot_annotation(title = str_glue("M&V method accuracy comparison"),
subtitle = "fractional savings in tidy subset")
plot_data <- df_cont_FS_tidy %>%
rename(cont = FS) %>%
left_join(df_FS_tidy %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(abs_diff = abs(savings - cont),
plot_max = max(abs_diff))
median_rand <- median(plot_data$abs_diff)
upper_rand <- quantile(plot_data$abs_diff, probs = 0.95)
p1 <- plot_data %>%
arrange(abs_diff) %>%
ggplot() +
geom_bar(aes(x = seq(1, nrow(all_names_tidy), by = 1), y = abs_diff),
stat = "identity", alpha = 0.5) +
geom_hline(yintercept = median_rand,
linetype = "dashed",
color = "red") +
annotate(y = median_rand + 0.5,
x = 20,
geom = "text",
label = paste0("(", "50% buildings: < ", round(median_rand, digits = 1), " %)"),
size = 4) +
geom_hline(yintercept = upper_rand,
linetype = "dashed",
color = "red") +
annotate(y = upper_rand + 0.5,
x = 20,
geom = "text",
label = paste0("(", "95% buildings: < ", round(upper_rand, digits = 1), " %)"),
size = 4) +
scale_x_continuous(expand = c(0.02, 0),
breaks = breaks_pretty(n = 3)) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 3),
labels = number_format(suffix = " %"),
limits = c(0, max(plot_data$plot_max) + 0.5)) +
labs(x = "Number of buildings",
y = "Absolute difference in measured savings",
subtitle = "Tidy subset") +
coord_cartesian(ylim = c(0, 25)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.direction = "horizontal",
legend.position = "bottom",
plot.margin = margin(t = 2, r = 7, b = 2, l = 2, unit = "mm"))
plot_data <- df_cont_FS_messy %>%
rename(cont = FS) %>%
left_join(df_FS_messy %>% filter(scenario == "ref" & method == "true"), by = c("name", "site")) %>%
mutate(abs_diff = abs(savings - cont),
plot_max = max(abs_diff))
median_rand <- median(plot_data$abs_diff)
upper_rand <- quantile(plot_data$abs_diff, probs = 0.95)
p2 <- plot_data %>%
arrange(abs_diff) %>%
ggplot() +
geom_bar(aes(x = seq(1, nrow(all_names_messy), by = 1), y = abs_diff),
stat = "identity", alpha = 0.5) +
geom_hline(yintercept = median_rand,
linetype = "dashed",
color = "red") +
annotate(y = median_rand + 0.5,
x = 220,
geom = "text",
label = paste0("(", "50% buildings: < ", round(median_rand, digits = 1), " %)"),
size = 4) +
geom_hline(yintercept = upper_rand,
linetype = "dashed",
color = "red") +
annotate(y = upper_rand + 0.5,
x = 220,
geom = "text",
label = paste0("(", "95% buildings: < ", round(upper_rand, digits = 1), " %)"),
size = 4) +
scale_x_continuous(expand = c(0.02, 0),
breaks = breaks_pretty(n = 3)) +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 3),
labels = number_format(suffix = " %"),
limits = c(0, max(plot_data$plot_max) + 0.1)) +
labs(x = "Number of buildings",
y = NULL,
subtitle = "Messy subset") +
coord_cartesian(ylim = c(0, 25)) +
theme(panel.grid.major.y = element_line(color = "grey80", linewidth = 0.25),
legend.direction = "horizontal",
legend.position = "bottom",
axis.text.y = element_blank(),
plot.margin = margin(t = 2, r = 7, b = 2, l = 0, unit = "mm"))
ggarrange(p1, p2,
ncol=2, nrow=1,
labels = c("a)", "b)"),
align = "hv",
legend="bottom") +
plot_annotation(title = str_glue("Continue sampling accuracy comparison"),
subtitle = "with 80%/20% intervention/baseline")
130/2
