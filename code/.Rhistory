geom_boxplot(width = 0.1, outliers = F) +
annotate(geom = "text",
label = sprintf("effect size: %.2f", anova_result$cohens.f[1]),
x = 1.5,
y = 15,
fontface = "bold") +
annotate(geom = "text",
label = sprintf("p value: %.2f", anova_result$p.value[1]),
x = 1.5,
y = 12.5,
fontface = "bold") +
annotate(geom = "text",
label = paste0('Mean savings: ', mean_ef, ' kWh \u00B1 ', confi, ' kWh'),
x = 1.5,
y = 10,
fontface = "bold") +
scale_x_discrete(expand = c(0.75, 0)) +
scale_y_continuous(expand = c(0, 0),
breaks = pretty_breaks(n = 5),
labels = number_format(suffix = " kWh")) +
scale_fill_manual(values = ls_colors) +
coord_cartesian(ylim = c(0, 18)) +
labs(subtitle = "Woodland",
x = NULL,
y = NULL,
fill = NULL) +
theme(legend.position = "bottom",
panel.grid.major.y = element_line(),
plot.margin = margin(t = 2, r = 2, b = 2, l = 2, unit = "mm"),
axis.text.y = element_blank(),
axis.text = element_text(size = 12))
ggarrange(p1, p2,
nrow = 1,
common.legend = T,
legend = "bottom") +
plot_annotation(title = "Daily utility usage between 4 PM - 9 PM by strategy")
ggsave(filename = "peak_util_distr.png", path = figs_path, units = "in", width = 8, height = 6, dpi = 300)
# fractional energy savings calculation
df_mean <- df %>%
group_by(schedule, install, site) %>%
summarise(mean = mean(energy)) %>%
ungroup() %>%
pivot_wider(names_from = "schedule", values_from = "mean", names_prefix = "schedule_")
df_mean %>%
mutate(abs_saving = schedule_1 - schedule_2,
site = as.factor(site),
site = recode_factor(site, "sj" = "San Jose", "wl" = "Woodland")) %>%
ggplot() +
geom_bar(aes(x = install, y = abs_saving), stat = "identity", position = "dodge") +
facet_wrap(~site, nrow = 2, scales = "free") +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 5),
labels = number_format(suffix =" kWh")) +
labs(title = "Mean utility savings during 4 PM - 9 PM",
x = NULL, y = NULL, colour = NULL) +
theme(panel.grid.major.y = element_line(colour = "grey80", linewidth = 0.25),
legend.position = "bottom",
axis.text = element_text(size = 12))
ggsave(filename = "abs_Upeak_saving_distr.png", path = figs_path, units = "in", width = 10, height = 6, dpi = 300)
# fractional energy savings calculation
mean_frac <- df_mean %>%
mutate(frac_saving = (schedule_1 - schedule_2) / schedule_1 * 100,
site = as.factor(site),
site = recode_factor(site, "sj" = "San Jose", "wl" = "Woodland")) %>%
group_by(site) %>%
summarise(mean = mean(frac_saving, na.rm = T)) %>%
ungroup()
df_mean %>%
mutate(frac_saving = (schedule_1 - schedule_2) / schedule_1 * 100,
site = as.factor(site),
site = recode_factor(site, "sj" = "San Jose", "wl" = "Woodland")) %>%
ggplot() +
geom_bar(aes(x = install, y = frac_saving), stat = "identity", position = "dodge") +
geom_hline(data = mean_frac, aes(yintercept = mean, group = site), color = "red", lty = "dashed") +
geom_text(data = mean_frac, aes(x = 6, y = mean, label = paste0(round(mean, digits = 0), " %")), color = "red", position = position_nudge(y = 3)) +
facet_wrap(~site, nrow = 2, scales = "free") +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 4),
labels = number_format(suffix =" %")) +
labs(title = "Mean fractional energy savings during 4 PM - 9 PM",
x = NULL, y = NULL, colour = NULL) +
theme(panel.grid.major.y = element_line(colour = "grey80", linewidth = 0.25),
legend.position = "bottom",
axis.text = element_text(size = 12))
df_mean %>%
mutate(frac_saving = (schedule_1 - schedule_2) / schedule_1 * 100,
site = as.factor(site),
site = recode_factor(site, "sj" = "San Jose", "wl" = "Woodland")) %>%
ggplot() +
geom_bar(aes(x = install, y = frac_saving), stat = "identity", position = "dodge") +
geom_hline(data = mean_frac, aes(yintercept = mean, group = site), color = "red", lty = "dashed") +
geom_text(data = mean_frac, aes(x = 6, y = mean, label = paste0(round(mean, digits = 0), " %")), color = "red", position = position_nudge(y = 3)) +
facet_wrap(~site, nrow = 2, scales = "free") +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 4),
labels = number_format(suffix =" %")) +
labs(title = "Mean fractional utility savings during 4 PM - 9 PM",
x = NULL, y = NULL, colour = NULL) +
theme(panel.grid.major.y = element_line(colour = "grey80", linewidth = 0.25),
legend.position = "bottom",
axis.text = element_text(size = 12))
ggsave(filename = "frac_Upeak_saving_distr.png", path = figs_path, units = "in", width = 10, height = 6, dpi = 300)
# boxplot showing the mean for all units
df %>%
mutate(schedule = as.factor(schedule),
schedule = recode_factor(schedule, "1" = "Baseline", "2" = "Intervention"),
site = as.factor(site),
site = recode_factor(site, "sj" = "San Jose", "wl" = "Woodland")) %>%
ggplot() +
geom_boxplot(aes(x = install, y = energy, fill = schedule), outliers = F) +
facet_wrap(~site, nrow = 2, scales = "free") +
scale_fill_manual(values = ls_colors) +
scale_y_continuous(breaks = breaks_pretty(n = 5),
labels = number_format(suffix = " kWh")) +
labs(title = str_glue("Daily energy use distribution between 4 PM - 9 PM"),
x = NULL,
y = NULL,
fill = NULL) +
theme(legend.position = "bottom",
panel.grid.major.y = element_line(),
plot.margin = margin(t = 2, r = 2, b = 2, l = 2, unit = "mm"),
axis.text = element_text(size = 12))
# boxplot showing the mean for all units
df %>%
mutate(schedule = as.factor(schedule),
schedule = recode_factor(schedule, "1" = "Baseline", "2" = "Intervention"),
site = as.factor(site),
site = recode_factor(site, "sj" = "San Jose", "wl" = "Woodland")) %>%
ggplot() +
geom_boxplot(aes(x = install, y = energy, fill = schedule), outliers = F) +
facet_wrap(~site, nrow = 2, scales = "free") +
scale_fill_manual(values = ls_colors) +
scale_y_continuous(breaks = breaks_pretty(n = 5),
labels = number_format(suffix = " kWh")) +
labs(title = str_glue("Daily utility use distribution between 4 PM - 9 PM"),
x = NULL,
y = NULL,
fill = NULL) +
theme(legend.position = "bottom",
panel.grid.major.y = element_line(),
plot.margin = margin(t = 2, r = 2, b = 2, l = 2, unit = "mm"),
axis.text = element_text(size = 12))
ggsave(filename = "peak_util_box.png", path = figs_path, units = "in", width = 12, height = 6, dpi = 300)
View(df_util)
df_util
df_frac
# cherry-pick scenario
test <- df_util %>%
right_join(df_frac, by = c("date", "install", "schedule", "site"))
View(test)
# cherry-pick scenario
test <- df_util %>%
right_join(df_frac, by = c("date", "install", "schedule", "site")) %>%
mutate(hour = hour(datetime)) %>%
filter(hour >= 16 & hour <= 21) %>%
group_by(date, schedule, install, site) %>%
summarise(usage = sum(usage)) %>%
ungroup()
# cherry-pick scenario
df_util_daily_sub <- df_util %>%
left_join(df_frac, by = c("date", "install", "schedule", "site")) %>%
mutate(hour = hour(datetime)) %>%
filter(hour >= 16 & hour <= 21) %>%
group_by(date, schedule, install, site) %>%
summarise(usage = sum(usage)) %>%
ungroup()
View(df_util_daily_sub)
df_util
# cherry-pick scenario
df_util_daily_sub <- df_util %>%
left_join(df_frac, by = c("date", "install", "schedule", "site")) %>%
mutate(hour = hour(datetime)) %>%
filter(hour >= 16 & hour <= 21) %>%
group_by(date, schedule, install, site) %>%
summarise(usage = sum(usage),
frac = median(frac_savigs)) %>%
ungroup()
# cherry-pick scenario
df_util_daily_sub <- df_util %>%
left_join(df_frac, by = c("date", "install", "schedule", "site")) %>%
mutate(hour = hour(datetime)) %>%
filter(hour >= 16 & hour <= 21) %>%
group_by(date, schedule, install, site) %>%
summarise(usage = sum(usage),
frac = median(frac_savings)) %>%
ungroup()
View(df_util_daily_sub)
# cherry-pick scenario
df_util_daily_sub <- df_util %>%
left_join(df_frac, by = c("date", "install", "schedule", "site")) %>%
mutate(hour = hour(datetime)) %>%
filter(hour >= 16 & hour <= 21) %>%
group_by(date, schedule, install, site) %>%
summarise(usage = sum(usage),
frac = median(frac_savings)) %>%
ungroup() %>%
filter(schedule == 1 | (schedule == 2 & frac >= 20))
View(df_util_daily_sub)
# cherry-pick scenario
df_util_daily_sub <- df_util %>%
left_join(df_frac, by = c("date", "install", "schedule", "site")) %>%
mutate(hour = hour(datetime)) %>%
filter(hour >= 16 & hour <= 21) %>%
group_by(date, schedule, install, site) %>%
summarise(usage = sum(usage),
frac = median(frac_savings)) %>%
ungroup() %>%
filter(schedule == 1 | (schedule == 2 & frac >= 20))
# cherry-pick scenario
df_util_daily_sub <- df_util %>%
left_join(df_frac, by = c("date", "install", "schedule", "site")) %>%
mutate(hour = hour(datetime)) %>%
filter(hour >= 16 & hour <= 21) %>%
group_by(date, schedule, install, site) %>%
summarise(usage = sum(usage),
frac = median(frac_savings)) %>%
ungroup() %>%
filter(schedule == 1 | (schedule == 2 & frac >= 20))
# boxplot showing the mean for all units
df_util_daily_sub %>%
mutate(schedule = as.factor(schedule),
schedule = recode_factor(schedule, "1" = "Baseline", "2" = "Intervention"),
site = as.factor(site),
site = recode_factor(site, "sj" = "San Jose", "wl" = "Woodland")) %>%
ggplot() +
geom_boxplot(aes(x = install, y = power_ave, fill = schedule), outliers = F) +
facet_wrap(~site, nrow = 2, scales = "free") +
scale_fill_manual(values = ls_colors) +
scale_y_continuous(breaks = breaks_pretty(n = 5),
labels = number_format(suffix = " kW")) +
labs(title = str_glue("Mean daily utility power usage distribution by strategy"),
x = NULL,
y = NULL,
fill = NULL) +
theme(legend.position = "bottom",
panel.grid.major.y = element_line(),
plot.margin = margin(t = 2, r = 2, b = 2, l = 2, unit = "mm"),
axis.text = element_text(size = 12))
# boxplot showing the mean for all units
df_util_daily %>%
mutate(schedule = as.factor(schedule),
schedule = recode_factor(schedule, "1" = "Baseline", "2" = "Intervention"),
site = as.factor(site),
site = recode_factor(site, "sj" = "San Jose", "wl" = "Woodland")) %>%
ggplot() +
geom_boxplot(aes(x = install, y = power_ave, fill = schedule), outliers = F) +
facet_wrap(~site, nrow = 2, scales = "free") +
scale_fill_manual(values = ls_colors) +
scale_y_continuous(breaks = breaks_pretty(n = 5),
labels = number_format(suffix = " kW")) +
labs(title = str_glue("Mean daily utility power usage distribution by strategy"),
x = NULL,
y = NULL,
fill = NULL) +
theme(legend.position = "bottom",
panel.grid.major.y = element_line(),
plot.margin = margin(t = 2, r = 2, b = 2, l = 2, unit = "mm"),
axis.text = element_text(size = 12))
# cherry-pick scenario
df_sub <- df_util %>%
left_join(df_frac, by = c("date", "install", "schedule", "site")) %>%
mutate(hour = hour(datetime)) %>%
filter(hour >= 16 & hour <= 21) %>%
group_by(date, schedule, install, site) %>%
summarise(energy = sum(usage),
frac = median(frac_savings)) %>%
ungroup() %>%
filter(schedule == 1 | (schedule == 2 & frac >= 20))
anova_result <- lm(energy ~ schedule, data = df_sub %>% filter(site == "sj")) %>%
sjstats::anova_stats(.)
# cherry-pick scenario
df <- df_util %>%
left_join(df_frac, by = c("date", "install", "schedule", "site")) %>%
mutate(hour = hour(datetime)) %>%
filter(hour >= 16 & hour <= 21) %>%
group_by(date, schedule, install, site) %>%
summarise(energy = sum(usage),
frac = median(frac_savings)) %>%
ungroup() %>%
filter(schedule == 1 | (schedule == 2 & frac >= 20))
anova_result <- lm(energy ~ schedule, data = df %>% filter(site == "sj")) %>%
sjstats::anova_stats(.)
effect_est <- t.test(energy ~ schedule, data = df %>% filter(site == "sj"))
mean_ef <- round(effect_est$estimate[1] - effect_est$estimate[2], digits = 1)
confi <- round(abs(mean_ef - effect_est$conf.int[1]), digits = 1)
p_value <- effect_est$p.value
p1 <- df %>%
filter(site == "sj") %>%
mutate(schedule = as.factor(schedule),
schedule = recode_factor(schedule, "1" = "Baseline", "2" = "Intervention"),
site = as.factor(site),
site = recode_factor(site, "sj" = "San Jose", "wl" = "Woodland")) %>%
ggplot(aes(x = schedule, y = energy, fill = schedule)) +
geom_violin(trim = T) +
geom_boxplot(width = 0.1, outliers = F) +
annotate(geom = "text",
label = sprintf("effect size: %.2f", anova_result$cohens.f[1]),
x = 1.5,
y = 15,
fontface = "bold") +
annotate(geom = "text",
label = sprintf("p value: %.2f", anova_result$p.value[1]),
x = 1.5,
y = 12.5,
fontface = "bold") +
annotate(geom = "text",
label = paste0('Mean savings: ', mean_ef, ' kWh \u00B1 ', confi, ' kWh'),
x = 1.5,
y = 10,
fontface = "bold") +
scale_x_discrete(expand = c(0.75, 0)) +
scale_y_continuous(expand = c(0, 0),
breaks = pretty_breaks(n = 5),
labels = number_format(suffix = " kWh")) +
scale_fill_manual(values = ls_colors) +
coord_cartesian(ylim = c(0, 18)) +
labs(subtitle = "San Jose",
x = NULL,
y = NULL,
fill = NULL) +
theme(legend.position = "bottom",
panel.grid.major.y = element_line(),
plot.margin = margin(t = 2, r = 2, b = 2, l = 2, unit = "mm"),
axis.text = element_text(size = 12))
anova_result <- lm(energy ~ schedule, data = df %>% filter(site == "wl")) %>%
sjstats::anova_stats(.)
effect_est <- t.test(energy ~ schedule, data = df %>% filter(site == "wl"))
mean_ef <- round(effect_est$estimate[1] - effect_est$estimate[2], digits = 1)
confi <- round(abs(mean_ef - effect_est$conf.int[1]), digits = 1)
p_value <- effect_est$p.value
p2 <- df %>%
filter(site == "wl") %>%
mutate(schedule = as.factor(schedule),
schedule = recode_factor(schedule, "1" = "Baseline", "2" = "Intervention"),
site = as.factor(site),
site = recode_factor(site, "sj" = "San Jose", "wl" = "Woodland")) %>%
ggplot(aes(x = schedule, y = energy, fill = schedule)) +
geom_violin(trim = T) +
geom_boxplot(width = 0.1, outliers = F) +
annotate(geom = "text",
label = sprintf("effect size: %.2f", anova_result$cohens.f[1]),
x = 1.5,
y = 15,
fontface = "bold") +
annotate(geom = "text",
label = sprintf("p value: %.2f", anova_result$p.value[1]),
x = 1.5,
y = 12.5,
fontface = "bold") +
annotate(geom = "text",
label = paste0('Mean savings: ', mean_ef, ' kWh \u00B1 ', confi, ' kWh'),
x = 1.5,
y = 10,
fontface = "bold") +
scale_x_discrete(expand = c(0.75, 0)) +
scale_y_continuous(expand = c(0, 0),
breaks = pretty_breaks(n = 5),
labels = number_format(suffix = " kWh")) +
scale_fill_manual(values = ls_colors) +
coord_cartesian(ylim = c(0, 18)) +
labs(subtitle = "Woodland",
x = NULL,
y = NULL,
fill = NULL) +
theme(legend.position = "bottom",
panel.grid.major.y = element_line(),
plot.margin = margin(t = 2, r = 2, b = 2, l = 2, unit = "mm"),
axis.text.y = element_blank(),
axis.text = element_text(size = 12))
ggarrange(p1, p2,
nrow = 1,
common.legend = T,
legend = "bottom") +
plot_annotation(title = "Daily utility usage between 4 PM - 9 PM by strategy")
ggarrange(p1, p2,
nrow = 1,
common.legend = T,
legend = "bottom") +
plot_annotation(title = "Daily utility usage between 4 PM - 9 PM by strategy",
subtitle = "(with measured heat pump water heater savings > 20% selection)")
ggarrange(p1, p2,
nrow = 1,
common.legend = T,
legend = "bottom") +
plot_annotation(title = "Daily utility usage between 4 PM - 9 PM by strategy",
subtitle = "(with measured heat pump water heater savings > 20% selection)")
ggsave(filename = "peak_utilsub_distr.png", path = figs_path, units = "in", width = 8, height = 6, dpi = 300)
# fractional energy savings calculation
df_mean <- df %>%
group_by(schedule, install, site) %>%
summarise(mean = mean(energy)) %>%
ungroup() %>%
pivot_wider(names_from = "schedule", values_from = "mean", names_prefix = "schedule_")
df_mean %>%
mutate(abs_saving = schedule_1 - schedule_2,
site = as.factor(site),
site = recode_factor(site, "sj" = "San Jose", "wl" = "Woodland")) %>%
ggplot() +
geom_bar(aes(x = install, y = abs_saving), stat = "identity", position = "dodge") +
facet_wrap(~site, nrow = 2, scales = "free") +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 5),
labels = number_format(suffix =" kWh")) +
labs(title = "Mean utility savings during 4 PM - 9 PM",
x = NULL, y = NULL, colour = NULL) +
theme(panel.grid.major.y = element_line(colour = "grey80", linewidth = 0.25),
legend.position = "bottom",
axis.text = element_text(size = 12))
df_mean %>%
mutate(abs_saving = schedule_1 - schedule_2,
site = as.factor(site),
site = recode_factor(site, "sj" = "San Jose", "wl" = "Woodland")) %>%
ggplot() +
geom_bar(aes(x = install, y = abs_saving), stat = "identity", position = "dodge") +
facet_wrap(~site, nrow = 2, scales = "free") +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 5),
labels = number_format(suffix =" kWh")) +
labs(title = "Mean utility savings during 4 PM - 9 PM",
subtitle = "(with measured heat pump water heater savings > 20% selection)",
x = NULL, y = NULL, colour = NULL) +
theme(panel.grid.major.y = element_line(colour = "grey80", linewidth = 0.25),
legend.position = "bottom",
axis.text = element_text(size = 12))
ggsave(filename = "abs_Usubpeak_saving_distr.png", path = figs_path, units = "in", width = 10, height = 6, dpi = 300)
# fractional energy savings calculation
mean_frac <- df_mean %>%
mutate(frac_saving = (schedule_1 - schedule_2) / schedule_1 * 100,
site = as.factor(site),
site = recode_factor(site, "sj" = "San Jose", "wl" = "Woodland")) %>%
group_by(site) %>%
summarise(mean = mean(frac_saving, na.rm = T)) %>%
ungroup()
df_mean %>%
mutate(frac_saving = (schedule_1 - schedule_2) / schedule_1 * 100,
site = as.factor(site),
site = recode_factor(site, "sj" = "San Jose", "wl" = "Woodland")) %>%
ggplot() +
geom_bar(aes(x = install, y = frac_saving), stat = "identity", position = "dodge") +
geom_hline(data = mean_frac, aes(yintercept = mean, group = site), color = "red", lty = "dashed") +
geom_text(data = mean_frac, aes(x = 6, y = mean, label = paste0(round(mean, digits = 0), " %")), color = "red", position = position_nudge(y = 3)) +
facet_wrap(~site, nrow = 2, scales = "free") +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 4),
labels = number_format(suffix =" %")) +
labs(title = "Mean fractional utility savings during 4 PM - 9 PM",
x = NULL, y = NULL, colour = NULL) +
theme(panel.grid.major.y = element_line(colour = "grey80", linewidth = 0.25),
legend.position = "bottom",
axis.text = element_text(size = 12))
df_mean %>%
mutate(frac_saving = (schedule_1 - schedule_2) / schedule_1 * 100,
site = as.factor(site),
site = recode_factor(site, "sj" = "San Jose", "wl" = "Woodland")) %>%
ggplot() +
geom_bar(aes(x = install, y = frac_saving), stat = "identity", position = "dodge") +
geom_hline(data = mean_frac, aes(yintercept = mean, group = site), color = "red", lty = "dashed") +
geom_text(data = mean_frac, aes(x = 6, y = mean, label = paste0(round(mean, digits = 0), " %")), color = "red", position = position_nudge(y = 3)) +
facet_wrap(~site, nrow = 2, scales = "free") +
scale_y_continuous(expand = c(0, 0),
breaks = breaks_pretty(n = 4),
labels = number_format(suffix =" %")) +
labs(title = "Mean fractional utility savings during 4 PM - 9 PM",
subtitle = "(with measured heat pump water heater savings > 20% selection)",
x = NULL, y = NULL, colour = NULL) +
theme(panel.grid.major.y = element_line(colour = "grey80", linewidth = 0.25),
legend.position = "bottom",
axis.text = element_text(size = 12))
ggsave(filename = "frac_Usubpeak_saving_distr.png", path = figs_path, units = "in", width = 10, height = 6, dpi = 300)
# boxplot showing the mean for all units
df %>%
mutate(schedule = as.factor(schedule),
schedule = recode_factor(schedule, "1" = "Baseline", "2" = "Intervention"),
site = as.factor(site),
site = recode_factor(site, "sj" = "San Jose", "wl" = "Woodland")) %>%
ggplot() +
geom_boxplot(aes(x = install, y = energy, fill = schedule), outliers = F) +
facet_wrap(~site, nrow = 2, scales = "free") +
scale_fill_manual(values = ls_colors) +
scale_y_continuous(breaks = breaks_pretty(n = 5),
labels = number_format(suffix = " kWh")) +
labs(title = str_glue("Daily utility use distribution between 4 PM - 9 PM"),
x = NULL,
y = NULL,
fill = NULL) +
theme(legend.position = "bottom",
panel.grid.major.y = element_line(),
plot.margin = margin(t = 2, r = 2, b = 2, l = 2, unit = "mm"),
axis.text = element_text(size = 12))
# boxplot showing the mean for all units
df %>%
mutate(schedule = as.factor(schedule),
schedule = recode_factor(schedule, "1" = "Baseline", "2" = "Intervention"),
site = as.factor(site),
site = recode_factor(site, "sj" = "San Jose", "wl" = "Woodland")) %>%
ggplot() +
geom_boxplot(aes(x = install, y = energy, fill = schedule), outliers = F) +
facet_wrap(~site, nrow = 2, scales = "free") +
scale_fill_manual(values = ls_colors) +
scale_y_continuous(breaks = breaks_pretty(n = 5),
labels = number_format(suffix = " kWh")) +
labs(title = "Daily utility use distribution between 4 PM - 9 PM",
subtitle = "(with measured heat pump water heater savings > 20% selection)",
x = NULL,
y = NULL,
fill = NULL) +
theme(legend.position = "bottom",
panel.grid.major.y = element_line(),
plot.margin = margin(t = 2, r = 2, b = 2, l = 2, unit = "mm"),
axis.text = element_text(size = 12))
ggsave(filename = "peak_utilsub_box.png", path = figs_path, units = "in", width = 12, height = 6, dpi = 300)
mean(df$frac, na.rm = T)
